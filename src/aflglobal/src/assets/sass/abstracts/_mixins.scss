@import "vars";

/* breakpoints */

$container-large: 1366px;
$container: 1126px;
$break-mobile: 380px;
$break-mobile-medium: 399px;
$break-mobile-large: 478px;
$break-mobile-horizontal: 767px;
$break-tablet: 900px;
$break-tablet-horizontal: 991px;
$break-tablet-large: 1199px;
$break-mobile-small: 251px;
$break-426: 426px;
$break-sm: 479px;
$break-md: 768px;
$break-lg: 992px;
$break-xlg: 1024px;
$break-xl: 1200px;
$break-2xl: 1440px;
$max-width: 960px;

@mixin wrapper() {
    max-width: $max-width;
    margin: 0 auto !important;
}

@mixin clearfix {
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin headings($from: 1, $to: 6) {
    @for $i from $from through $to {
        h#{$i} {
            @content
        }
    }
}

@mixin font-size($sizeValue: 1.6) {
    font-size: ($sizeValue * 10) + px;
    font-size: $sizeValue + rem;
}

@mixin proxima-font($weight: semibold) {
    @if($weight==semibold) {
        font-family: "ProximaNova-Semibold", arial, helvetica, sans-serif;
    }

    @else if($weight==light) {
        font-family: "ProximaNova-Light", arial, helvetica, sans-serif;
    }
}

@mixin opensans-font-stack() {
    font-family: "Open Sans", Helvetica, Verdana, Tahoma, sans-serif;
}

@mixin loading-gif() {
    background-image: url(data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAzMiAzMiIgd2lkdGg9IjMyIiBoZWlnaHQ9IjMyIiBmaWxsPSJibGFjayI+DQogIDxwYXRoICBvcGFjaXR5PSIuMjUiIGQ9Ik0xNiAwIEExNiAxNiAwIDAgMCAxNiAzMiBBMTYgMTYgMCAwIDAgMTYgMCBNMTYgNCBBMTIgMTIgMCAwIDEgMTYgMjggQTEyIDEyIDAgMCAxIDE2IDQiLz4NCiAgPHBhdGggZmlsbD0nIzFhODBiNicgZD0iTTE2IDAgQTE2IDE2IDAgMCAxIDMyIDE2IEwyOCAxNiBBMTIgMTIgMCAwIDAgMTYgNHoiPg0KICAgIDxhbmltYXRlVHJhbnNmb3JtIGF0dHJpYnV0ZU5hbWU9InRyYW5zZm9ybSIgdHlwZT0icm90YXRlIiBmcm9tPSIwIDE2IDE2IiB0bz0iMzYwIDE2IDE2IiBkdXI9IjAuOHMiIHJlcGVhdENvdW50PSJpbmRlZmluaXRlIiAvPg0KICA8L3BhdGg+DQo8L3N2Zz4NCg==);
    background-position: center center;
    background-repeat: no-repeat;
}

@mixin respond-to($media) {
    @if $media==426 {
        @media only screen and (min-width: $break-426) {
            @content;
        }
    }

    @else if $media==mobile-medium {
        @media only screen and (max-width: $break-mobile-medium) {
            @content;
        }
    }

    @if $media==sm {
        @media only screen and (max-width: $break-sm) {
            @content;
        }
    }

    @else if $media==md {
        @media only screen and (max-width: $break-md) {
            @content;
        }
    }

    @else if $media==lg {
        @media only screen and (max-width: $break-lg) {
            @content;
        }
    }

    @else if $media==xlg {
        @media only screen and (min-width: $break-xlg) {
            @content;
        }
    }

    @else if $media==xl {
        @media only screen and (min-width: $break-xl) {
            @content;
        }
    }

    @else if $media==2xl {
        @media only screen and (min-width: $break-2xl) {
            @content;
        }
    }
}

@mixin border-basic($position: all, $border-color: $border-gray, $border-width: 1px) {
    @if($position !=all) {
        border-#{$position}-width: $border-width;
        border-#{$position}-style: solid;
        border-#{$position}-color: $border-color;
    }

    @else {
        border-width: $border-width;
        border-style: solid;
        border-color: $border-color;
    }
}

@mixin fixed-bg($pos, $min-height: 240px) {
    background-position: $pos;
    background-attachment: fixed;
    min-height: $min-height;
}

@mixin linear-gradient($direction, $color-stops...) {

    // Direction has been omitted and happens to be a color-stop
    @if is-direction($direction)==false {
        $color-stops: $direction, $color-stops;
        $direction: 180deg;
    }

    background: nth(nth($color-stops, 1), 1);
    background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
    background: linear-gradient($direction, $color-stops);
}

@mixin default-link-button {
    @include border-basic();
    @include font-size(1.2);
    display: inline-block;
    vertical-align: middle;
    box-sizing: border-box;
    margin: 5px 0;
    padding: 10px 15px;
    text-align: center;
    text-decoration: none;
    font-weight: bold;

    &:hover {
        color: $text-basic;
        background: $bg-light-gray;
    }
}

@mixin font($font-family, $font-file, $font-weight: 400) {
    @font-face {
        font-family: $font-family;
        src: url($font-file+'.ttf') format('truetype');
        font-weight: $font-weight;
        font-style: normal;
    }
}

@include font('Hind', '/Font/Hind-Light', 300);
@include font('Hind', '/Font/Hind-Regular', 400);
@include font('Hind', '/Font/Hind-Medium', 500);
@include font('Hind', '/Font/Hind-SemiBold', 600);
@include font('Hind', '/Font/Hind-Bold', 700);