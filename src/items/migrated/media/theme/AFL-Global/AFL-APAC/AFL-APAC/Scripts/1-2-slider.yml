---
ID: "31416696-a071-4cad-a449-85878586ff92"
Parent: "92f25393-0874-4ddb-92ae-1e7ee892c39b"
Template: "962b53c4-f93b-4df9-9821-415c867b8903"
Path: "/sitecore/media library/Themes/AFL-Global/AFL-APAC/AFL-APAC/Scripts/1-2-slider"
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: "-/media/CAA5A3C3FB6942118BFE9FE2DBB24EAC.ashx?h=16&thn=1&w=16"
- ID: "40e50ed9-ba07-4702-992e-a912738d32dc"
  Hint: Blob
  BlobID: "0c249059-ff30-4fff-972b-a5a2409b3abd"
  Value: ISBmdW5jdGlvbiAoaSkgew0KICAgICJ1c2Ugc3RyaWN0IjsNCiAgICAiZnVuY3Rpb24iID09IHR5cGVvZiBkZWZpbmUgJiYgZGVmaW5lLmFtZCA/IGRlZmluZShbImpxdWVyeSJdLCBpKSA6ICJ1bmRlZmluZWQiICE9IHR5cGVvZiBleHBvcnRzID8gbW9kdWxlLmV4cG9ydHMgPSBpKHJlcXVpcmUoImpxdWVyeSIpKSA6IGkoalF1ZXJ5KQ0KfShmdW5jdGlvbiAoaSkgew0KICAgICJ1c2Ugc3RyaWN0IjsNCiAgICB2YXIgZSA9IHdpbmRvdy5TbGljayB8fCB7fTsNCiAgICAoZSA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgdmFyIGUgPSAwOw0KICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHQsIG8pIHsNCiAgICAgICAgICAgIHZhciBzLCBuID0gdGhpczsNCiAgICAgICAgICAgIG4uZGVmYXVsdHMgPSB7DQogICAgICAgICAgICAgICAgYWNjZXNzaWJpbGl0eTogITAsDQogICAgICAgICAgICAgICAgYWRhcHRpdmVIZWlnaHQ6ICExLA0KICAgICAgICAgICAgICAgIGFwcGVuZEFycm93czogaSh0KSwNCiAgICAgICAgICAgICAgICBhcHBlbmREb3RzOiBpKHQpLA0KICAgICAgICAgICAgICAgIGFycm93czogITAsDQogICAgICAgICAgICAgICAgYXNOYXZGb3I6IG51bGwsDQogICAgICAgICAgICAgICAgcHJldkFycm93OiAnPGJ1dHRvbiBjbGFzcz0ic2xpY2stcHJldiIgYXJpYS1sYWJlbD0iUHJldmlvdXMiIHR5cGU9ImJ1dHRvbiI+UHJldmlvdXM8L2J1dHRvbj4nLA0KICAgICAgICAgICAgICAgIG5leHRBcnJvdzogJzxidXR0b24gY2xhc3M9InNsaWNrLW5leHQiIGFyaWEtbGFiZWw9Ik5leHQiIHR5cGU9ImJ1dHRvbiI+TmV4dDwvYnV0dG9uPicsDQogICAgICAgICAgICAgICAgYXV0b3BsYXk6ICExLA0KICAgICAgICAgICAgICAgIGF1dG9wbGF5U3BlZWQ6IDNlMywNCiAgICAgICAgICAgICAgICBjZW50ZXJNb2RlOiAhMSwNCiAgICAgICAgICAgICAgICBjZW50ZXJQYWRkaW5nOiAiNTBweCIsDQogICAgICAgICAgICAgICAgY3NzRWFzZTogImVhc2UiLA0KICAgICAgICAgICAgICAgIGN1c3RvbVBhZ2luZzogZnVuY3Rpb24gKGUsIHQpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGkoJzxidXR0b24gdHlwZT0iYnV0dG9uIiAvPicpLnRleHQodCArIDEpDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICBkb3RzOiAhMSwNCiAgICAgICAgICAgICAgICBkb3RzQ2xhc3M6ICJzbGljay1kb3RzIiwNCiAgICAgICAgICAgICAgICBkcmFnZ2FibGU6ICEwLA0KICAgICAgICAgICAgICAgIGVhc2luZzogImxpbmVhciIsDQogICAgICAgICAgICAgICAgZWRnZUZyaWN0aW9uOiAuMzUsDQogICAgICAgICAgICAgICAgZmFkZTogITEsDQogICAgICAgICAgICAgICAgZm9jdXNPblNlbGVjdDogITEsDQogICAgICAgICAgICAgICAgZm9jdXNPbkNoYW5nZTogITEsDQogICAgICAgICAgICAgICAgaW5maW5pdGU6ICEwLA0KICAgICAgICAgICAgICAgIGluaXRpYWxTbGlkZTogMCwNCiAgICAgICAgICAgICAgICBsYXp5TG9hZDogIm9uZGVtYW5kIiwNCiAgICAgICAgICAgICAgICBtb2JpbGVGaXJzdDogITEsDQogICAgICAgICAgICAgICAgcGF1c2VPbkhvdmVyOiAhMCwNCiAgICAgICAgICAgICAgICBwYXVzZU9uRm9jdXM6ICEwLA0KICAgICAgICAgICAgICAgIHBhdXNlT25Eb3RzSG92ZXI6ICExLA0KICAgICAgICAgICAgICAgIHJlc3BvbmRUbzogIndpbmRvdyIsDQogICAgICAgICAgICAgICAgcmVzcG9uc2l2ZTogbnVsbCwNCiAgICAgICAgICAgICAgICByb3dzOiAxLA0KICAgICAgICAgICAgICAgIHJ0bDogITEsDQogICAgICAgICAgICAgICAgc2xpZGU6ICIiLA0KICAgICAgICAgICAgICAgIHNsaWRlc1BlclJvdzogMSwNCiAgICAgICAgICAgICAgICBzbGlkZXNUb1Nob3c6IDEsDQogICAgICAgICAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsDQogICAgICAgICAgICAgICAgc3BlZWQ6IDUwMCwNCiAgICAgICAgICAgICAgICBzd2lwZTogITAsDQogICAgICAgICAgICAgICAgc3dpcGVUb1NsaWRlOiAhMSwNCiAgICAgICAgICAgICAgICB0b3VjaE1vdmU6ICEwLA0KICAgICAgICAgICAgICAgIHRvdWNoVGhyZXNob2xkOiA1LA0KICAgICAgICAgICAgICAgIHVzZUNTUzogITAsDQogICAgICAgICAgICAgICAgdXNlVHJhbnNmb3JtOiAhMCwNCiAgICAgICAgICAgICAgICB2YXJpYWJsZVdpZHRoOiAhMSwNCiAgICAgICAgICAgICAgICB2ZXJ0aWNhbDogITEsDQogICAgICAgICAgICAgICAgdmVydGljYWxTd2lwaW5nOiAhMSwNCiAgICAgICAgICAgICAgICB3YWl0Rm9yQW5pbWF0ZTogITAsDQogICAgICAgICAgICAgICAgekluZGV4OiAxZTMNCiAgICAgICAgICAgIH0sIG4uaW5pdGlhbHMgPSB7DQogICAgICAgICAgICAgICAgYW5pbWF0aW5nOiAhMSwNCiAgICAgICAgICAgICAgICBkcmFnZ2luZzogITEsDQogICAgICAgICAgICAgICAgYXV0b1BsYXlUaW1lcjogbnVsbCwNCiAgICAgICAgICAgICAgICBjdXJyZW50RGlyZWN0aW9uOiAwLA0KICAgICAgICAgICAgICAgIGN1cnJlbnRMZWZ0OiBudWxsLA0KICAgICAgICAgICAgICAgIGN1cnJlbnRTbGlkZTogMCwNCiAgICAgICAgICAgICAgICBkaXJlY3Rpb246IDEsDQogICAgICAgICAgICAgICAgJGRvdHM6IG51bGwsDQogICAgICAgICAgICAgICAgbGlzdFdpZHRoOiBudWxsLA0KICAgICAgICAgICAgICAgIGxpc3RIZWlnaHQ6IG51bGwsDQogICAgICAgICAgICAgICAgbG9hZEluZGV4OiAwLA0KICAgICAgICAgICAgICAgICRuZXh0QXJyb3c6IG51bGwsDQogICAgICAgICAgICAgICAgJHByZXZBcnJvdzogbnVsbCwNCiAgICAgICAgICAgICAgICBzY3JvbGxpbmc6ICExLA0KICAgICAgICAgICAgICAgIHNsaWRlQ291bnQ6IG51bGwsDQogICAgICAgICAgICAgICAgc2xpZGVXaWR0aDogbnVsbCwNCiAgICAgICAgICAgICAgICAkc2xpZGVUcmFjazogbnVsbCwNCiAgICAgICAgICAgICAgICAkc2xpZGVzOiBudWxsLA0KICAgICAgICAgICAgICAgIHNsaWRpbmc6ICExLA0KICAgICAgICAgICAgICAgIHNsaWRlT2Zmc2V0OiAwLA0KICAgICAgICAgICAgICAgIHN3aXBlTGVmdDogbnVsbCwNCiAgICAgICAgICAgICAgICBzd2lwaW5nOiAhMSwNCiAgICAgICAgICAgICAgICAkbGlzdDogbnVsbCwNCiAgICAgICAgICAgICAgICB0b3VjaE9iamVjdDoge30sDQogICAgICAgICAgICAgICAgdHJhbnNmb3Jtc0VuYWJsZWQ6ICExLA0KICAgICAgICAgICAgICAgIHVuc2xpY2tlZDogITENCiAgICAgICAgICAgIH0sIGkuZXh0ZW5kKG4sIG4uaW5pdGlhbHMpLCBuLmFjdGl2ZUJyZWFrcG9pbnQgPSBudWxsLCBuLmFuaW1UeXBlID0gbnVsbCwgbi5hbmltUHJvcCA9IG51bGwsIG4uYnJlYWtwb2ludHMgPSBbXSwgbi5icmVha3BvaW50U2V0dGluZ3MgPSBbXSwgbi5jc3NUcmFuc2l0aW9ucyA9ICExLCBuLmZvY3Vzc2VkID0gITEsIG4uaW50ZXJydXB0ZWQgPSAhMSwgbi5oaWRkZW4gPSAiaGlkZGVuIiwgbi5wYXVzZWQgPSAhMCwgbi5wb3NpdGlvblByb3AgPSBudWxsLCBuLnJlc3BvbmRUbyA9IG51bGwsIG4ucm93Q291bnQgPSAxLCBuLnNob3VsZENsaWNrID0gITAsIG4uJHNsaWRlciA9IGkodCksIG4uJHNsaWRlc0NhY2hlID0gbnVsbCwgbi50cmFuc2Zvcm1UeXBlID0gbnVsbCwgbi50cmFuc2l0aW9uVHlwZSA9IG51bGwsIG4udmlzaWJpbGl0eUNoYW5nZSA9ICJ2aXNpYmlsaXR5Y2hhbmdlIiwgbi53aW5kb3dXaWR0aCA9IDAsIG4ud2luZG93VGltZXIgPSBudWxsLCBzID0gaSh0KS5kYXRhKCJzbGljayIpIHx8IHt9LCBuLm9wdGlvbnMgPSBpLmV4dGVuZCh7fSwgbi5kZWZhdWx0cywgbywgcyksIG4uY3VycmVudFNsaWRlID0gbi5vcHRpb25zLmluaXRpYWxTbGlkZSwgbi5vcmlnaW5hbFNldHRpbmdzID0gbi5vcHRpb25zLCB2b2lkIDAgIT09IGRvY3VtZW50Lm1vekhpZGRlbiA/IChuLmhpZGRlbiA9ICJtb3pIaWRkZW4iLCBuLnZpc2liaWxpdHlDaGFuZ2UgPSAibW96dmlzaWJpbGl0eWNoYW5nZSIpIDogdm9pZCAwICE9PSBkb2N1bWVudC53ZWJraXRIaWRkZW4gJiYgKG4uaGlkZGVuID0gIndlYmtpdEhpZGRlbiIsIG4udmlzaWJpbGl0eUNoYW5nZSA9ICJ3ZWJraXR2aXNpYmlsaXR5Y2hhbmdlIiksIG4uYXV0b1BsYXkgPSBpLnByb3h5KG4uYXV0b1BsYXksIG4pLCBuLmF1dG9QbGF5Q2xlYXIgPSBpLnByb3h5KG4uYXV0b1BsYXlDbGVhciwgbiksIG4uYXV0b1BsYXlJdGVyYXRvciA9IGkucHJveHkobi5hdXRvUGxheUl0ZXJhdG9yLCBuKSwgbi5jaGFuZ2VTbGlkZSA9IGkucHJveHkobi5jaGFuZ2VTbGlkZSwgbiksIG4uY2xpY2tIYW5kbGVyID0gaS5wcm94eShuLmNsaWNrSGFuZGxlciwgbiksIG4uc2VsZWN0SGFuZGxlciA9IGkucHJveHkobi5zZWxlY3RIYW5kbGVyLCBuKSwgbi5zZXRQb3NpdGlvbiA9IGkucHJveHkobi5zZXRQb3NpdGlvbiwgbiksIG4uc3dpcGVIYW5kbGVyID0gaS5wcm94eShuLnN3aXBlSGFuZGxlciwgbiksIG4uZHJhZ0hhbmRsZXIgPSBpLnByb3h5KG4uZHJhZ0hhbmRsZXIsIG4pLCBuLmtleUhhbmRsZXIgPSBpLnByb3h5KG4ua2V5SGFuZGxlciwgbiksIG4uaW5zdGFuY2VVaWQgPSBlKyssIG4uaHRtbEV4cHIgPSAvXig/OlxzKig8W1x3XFddKz4pW14+XSopJC8sIG4ucmVnaXN0ZXJCcmVha3BvaW50cygpLCBuLmluaXQoITApDQogICAgICAgIH0NCiAgICB9KCkpLnByb3RvdHlwZS5hY3RpdmF0ZUFEQSA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgdGhpcy4kc2xpZGVUcmFjay5maW5kKCIuc2xpY2stYWN0aXZlIikuYXR0cih7DQogICAgICAgICAgICAiYXJpYS1oaWRkZW4iOiAiZmFsc2UiDQogICAgICAgIH0pLmZpbmQoImEsIGlucHV0LCBidXR0b24sIHNlbGVjdCIpLmF0dHIoew0KICAgICAgICAgICAgdGFiaW5kZXg6ICIwIg0KICAgICAgICB9KQ0KICAgIH0sIGUucHJvdG90eXBlLmFkZFNsaWRlID0gZS5wcm90b3R5cGUuc2xpY2tBZGQgPSBmdW5jdGlvbiAoZSwgdCwgbykgew0KICAgICAgICB2YXIgcyA9IHRoaXM7DQogICAgICAgIGlmICgiYm9vbGVhbiIgPT0gdHlwZW9mIHQpIG8gPSB0LCB0ID0gbnVsbDsNCiAgICAgICAgZWxzZSBpZiAodCA8IDAgfHwgdCA+PSBzLnNsaWRlQ291bnQpIHJldHVybiAhMTsNCiAgICAgICAgcy51bmxvYWQoKSwgIm51bWJlciIgPT0gdHlwZW9mIHQgPyAwID09PSB0ICYmIDAgPT09IHMuJHNsaWRlcy5sZW5ndGggPyBpKGUpLmFwcGVuZFRvKHMuJHNsaWRlVHJhY2spIDogbyA/IGkoZSkuaW5zZXJ0QmVmb3JlKHMuJHNsaWRlcy5lcSh0KSkgOiBpKGUpLmluc2VydEFmdGVyKHMuJHNsaWRlcy5lcSh0KSkgOiAhMCA9PT0gbyA/IGkoZSkucHJlcGVuZFRvKHMuJHNsaWRlVHJhY2spIDogaShlKS5hcHBlbmRUbyhzLiRzbGlkZVRyYWNrKSwgcy4kc2xpZGVzID0gcy4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLCBzLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSkuZGV0YWNoKCksIHMuJHNsaWRlVHJhY2suYXBwZW5kKHMuJHNsaWRlcyksIHMuJHNsaWRlcy5lYWNoKGZ1bmN0aW9uIChlLCB0KSB7DQogICAgICAgICAgICBpKHQpLmF0dHIoImRhdGEtc2xpY2staW5kZXgiLCBlKQ0KICAgICAgICB9KSwgcy4kc2xpZGVzQ2FjaGUgPSBzLiRzbGlkZXMsIHMucmVpbml0KCkNCiAgICB9LCBlLnByb3RvdHlwZS5hbmltYXRlSGVpZ2h0ID0gZnVuY3Rpb24gKCkgew0KICAgICAgICB2YXIgaSA9IHRoaXM7DQogICAgICAgIGlmICgxID09PSBpLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmICEwID09PSBpLm9wdGlvbnMuYWRhcHRpdmVIZWlnaHQgJiYgITEgPT09IGkub3B0aW9ucy52ZXJ0aWNhbCkgew0KICAgICAgICAgICAgdmFyIGUgPSBpLiRzbGlkZXMuZXEoaS5jdXJyZW50U2xpZGUpLm91dGVySGVpZ2h0KCEwKTsNCiAgICAgICAgICAgIGkuJGxpc3QuYW5pbWF0ZSh7DQogICAgICAgICAgICAgICAgaGVpZ2h0OiBlDQogICAgICAgICAgICB9LCBpLm9wdGlvbnMuc3BlZWQpDQogICAgICAgIH0NCiAgICB9LCBlLnByb3RvdHlwZS5hbmltYXRlU2xpZGUgPSBmdW5jdGlvbiAoZSwgdCkgew0KICAgICAgICB2YXIgbyA9IHt9LA0KICAgICAgICAgICAgcyA9IHRoaXM7DQogICAgICAgIHMuYW5pbWF0ZUhlaWdodCgpLCAhMCA9PT0gcy5vcHRpb25zLnJ0bCAmJiAhMSA9PT0gcy5vcHRpb25zLnZlcnRpY2FsICYmIChlID0gLWUpLCAhMSA9PT0gcy50cmFuc2Zvcm1zRW5hYmxlZCA/ICExID09PSBzLm9wdGlvbnMudmVydGljYWwgPyBzLiRzbGlkZVRyYWNrLmFuaW1hdGUoew0KICAgICAgICAgICAgbGVmdDogZQ0KICAgICAgICB9LCBzLm9wdGlvbnMuc3BlZWQsIHMub3B0aW9ucy5lYXNpbmcsIHQpIDogcy4kc2xpZGVUcmFjay5hbmltYXRlKHsNCiAgICAgICAgICAgIHRvcDogZQ0KICAgICAgICB9LCBzLm9wdGlvbnMuc3BlZWQsIHMub3B0aW9ucy5lYXNpbmcsIHQpIDogITEgPT09IHMuY3NzVHJhbnNpdGlvbnMgPyAoITAgPT09IHMub3B0aW9ucy5ydGwgJiYgKHMuY3VycmVudExlZnQgPSAtcy5jdXJyZW50TGVmdCksIGkoew0KICAgICAgICAgICAgYW5pbVN0YXJ0OiBzLmN1cnJlbnRMZWZ0DQogICAgICAgIH0pLmFuaW1hdGUoew0KICAgICAgICAgICAgYW5pbVN0YXJ0OiBlDQogICAgICAgIH0sIHsNCiAgICAgICAgICAgIGR1cmF0aW9uOiBzLm9wdGlvbnMuc3BlZWQsDQogICAgICAgICAgICBlYXNpbmc6IHMub3B0aW9ucy5lYXNpbmcsDQogICAgICAgICAgICBzdGVwOiBmdW5jdGlvbiAoaSkgew0KICAgICAgICAgICAgICAgIGkgPSBNYXRoLmNlaWwoaSksICExID09PSBzLm9wdGlvbnMudmVydGljYWwgPyAob1tzLmFuaW1UeXBlXSA9ICJ0cmFuc2xhdGUoIiArIGkgKyAicHgsIDBweCkiLCBzLiRzbGlkZVRyYWNrLmNzcyhvKSkgOiAob1tzLmFuaW1UeXBlXSA9ICJ0cmFuc2xhdGUoMHB4LCIgKyBpICsgInB4KSIsIHMuJHNsaWRlVHJhY2suY3NzKG8pKQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGNvbXBsZXRlOiBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgdCAmJiB0LmNhbGwoKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9KSkgOiAocy5hcHBseVRyYW5zaXRpb24oKSwgZSA9IE1hdGguY2VpbChlKSwgITEgPT09IHMub3B0aW9ucy52ZXJ0aWNhbCA/IG9bcy5hbmltVHlwZV0gPSAidHJhbnNsYXRlM2QoIiArIGUgKyAicHgsIDBweCwgMHB4KSIgOiBvW3MuYW5pbVR5cGVdID0gInRyYW5zbGF0ZTNkKDBweCwiICsgZSArICJweCwgMHB4KSIsIHMuJHNsaWRlVHJhY2suY3NzKG8pLCB0ICYmIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgcy5kaXNhYmxlVHJhbnNpdGlvbigpLCB0LmNhbGwoKQ0KICAgICAgICB9LCBzLm9wdGlvbnMuc3BlZWQpKQ0KICAgIH0sIGUucHJvdG90eXBlLmdldE5hdlRhcmdldCA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgdmFyIGUgPSB0aGlzLA0KICAgICAgICAgICAgdCA9IGUub3B0aW9ucy5hc05hdkZvcjsNCiAgICAgICAgcmV0dXJuIHQgJiYgbnVsbCAhPT0gdCAmJiAodCA9IGkodCkubm90KGUuJHNsaWRlcikpLCB0DQogICAgfSwgZS5wcm90b3R5cGUuYXNOYXZGb3IgPSBmdW5jdGlvbiAoZSkgew0KICAgICAgICB2YXIgdCA9IHRoaXMuZ2V0TmF2VGFyZ2V0KCk7DQogICAgICAgIG51bGwgIT09IHQgJiYgIm9iamVjdCIgPT0gdHlwZW9mIHQgJiYgdC5lYWNoKGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgIHZhciB0ID0gaSh0aGlzKS5zbGljaygiZ2V0U2xpY2siKTsNCiAgICAgICAgICAgIHQudW5zbGlja2VkIHx8IHQuc2xpZGVIYW5kbGVyKGUsICEwKQ0KICAgICAgICB9KQ0KICAgIH0sIGUucHJvdG90eXBlLmFwcGx5VHJhbnNpdGlvbiA9IGZ1bmN0aW9uIChpKSB7DQogICAgICAgIHZhciBlID0gdGhpcywNCiAgICAgICAgICAgIHQgPSB7fTsNCiAgICAgICAgITEgPT09IGUub3B0aW9ucy5mYWRlID8gdFtlLnRyYW5zaXRpb25UeXBlXSA9IGUudHJhbnNmb3JtVHlwZSArICIgIiArIGUub3B0aW9ucy5zcGVlZCArICJtcyAiICsgZS5vcHRpb25zLmNzc0Vhc2UgOiB0W2UudHJhbnNpdGlvblR5cGVdID0gIm9wYWNpdHkgIiArIGUub3B0aW9ucy5zcGVlZCArICJtcyAiICsgZS5vcHRpb25zLmNzc0Vhc2UsICExID09PSBlLm9wdGlvbnMuZmFkZSA/IGUuJHNsaWRlVHJhY2suY3NzKHQpIDogZS4kc2xpZGVzLmVxKGkpLmNzcyh0KQ0KICAgIH0sIGUucHJvdG90eXBlLmF1dG9QbGF5ID0gZnVuY3Rpb24gKCkgew0KICAgICAgICB2YXIgaSA9IHRoaXM7DQogICAgICAgIGkuYXV0b1BsYXlDbGVhcigpLCBpLnNsaWRlQ291bnQgPiBpLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmIChpLmF1dG9QbGF5VGltZXIgPSBzZXRJbnRlcnZhbChpLmF1dG9QbGF5SXRlcmF0b3IsIGkub3B0aW9ucy5hdXRvcGxheVNwZWVkKSkNCiAgICB9LCBlLnByb3RvdHlwZS5hdXRvUGxheUNsZWFyID0gZnVuY3Rpb24gKCkgew0KICAgICAgICB2YXIgaSA9IHRoaXM7DQogICAgICAgIGkuYXV0b1BsYXlUaW1lciAmJiBjbGVhckludGVydmFsKGkuYXV0b1BsYXlUaW1lcikNCiAgICB9LCBlLnByb3RvdHlwZS5hdXRvUGxheUl0ZXJhdG9yID0gZnVuY3Rpb24gKCkgew0KICAgICAgICB2YXIgaSA9IHRoaXMsDQogICAgICAgICAgICBlID0gaS5jdXJyZW50U2xpZGUgKyBpLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGw7DQogICAgICAgIGkucGF1c2VkIHx8IGkuaW50ZXJydXB0ZWQgfHwgaS5mb2N1c3NlZCB8fCAoITEgPT09IGkub3B0aW9ucy5pbmZpbml0ZSAmJiAoMSA9PT0gaS5kaXJlY3Rpb24gJiYgaS5jdXJyZW50U2xpZGUgKyAxID09PSBpLnNsaWRlQ291bnQgLSAxID8gaS5kaXJlY3Rpb24gPSAwIDogMCA9PT0gaS5kaXJlY3Rpb24gJiYgKGUgPSBpLmN1cnJlbnRTbGlkZSAtIGkub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCwgaS5jdXJyZW50U2xpZGUgLSAxID09IDAgJiYgKGkuZGlyZWN0aW9uID0gMSkpKSwgaS5zbGlkZUhhbmRsZXIoZSkpDQogICAgfSwgZS5wcm90b3R5cGUuYnVpbGRBcnJvd3MgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgIHZhciBlID0gdGhpczsNCiAgICAgICAgITAgPT09IGUub3B0aW9ucy5hcnJvd3MgJiYgKGUuJHByZXZBcnJvdyA9IGkoZS5vcHRpb25zLnByZXZBcnJvdykuYWRkQ2xhc3MoInNsaWNrLWFycm93IiksIGUuJG5leHRBcnJvdyA9IGkoZS5vcHRpb25zLm5leHRBcnJvdykuYWRkQ2xhc3MoInNsaWNrLWFycm93IiksIGUuc2xpZGVDb3VudCA+IGUub3B0aW9ucy5zbGlkZXNUb1Nob3cgPyAoZS4kcHJldkFycm93LnJlbW92ZUNsYXNzKCJzbGljay1oaWRkZW4iKS5yZW1vdmVBdHRyKCJhcmlhLWhpZGRlbiB0YWJpbmRleCIpLCBlLiRuZXh0QXJyb3cucmVtb3ZlQ2xhc3MoInNsaWNrLWhpZGRlbiIpLnJlbW92ZUF0dHIoImFyaWEtaGlkZGVuIHRhYmluZGV4IiksIGUuaHRtbEV4cHIudGVzdChlLm9wdGlvbnMucHJldkFycm93KSAmJiBlLiRwcmV2QXJyb3cucHJlcGVuZFRvKGUub3B0aW9ucy5hcHBlbmRBcnJvd3MpLCBlLmh0bWxFeHByLnRlc3QoZS5vcHRpb25zLm5leHRBcnJvdykgJiYgZS4kbmV4dEFycm93LmFwcGVuZFRvKGUub3B0aW9ucy5hcHBlbmRBcnJvd3MpLCAhMCAhPT0gZS5vcHRpb25zLmluZmluaXRlICYmIGUuJHByZXZBcnJvdy5hZGRDbGFzcygic2xpY2stZGlzYWJsZWQiKS5hdHRyKCJhcmlhLWRpc2FibGVkIiwgInRydWUiKSkgOiBlLiRwcmV2QXJyb3cuYWRkKGUuJG5leHRBcnJvdykuYWRkQ2xhc3MoInNsaWNrLWhpZGRlbiIpLmF0dHIoew0KICAgICAgICAgICAgImFyaWEtZGlzYWJsZWQiOiAidHJ1ZSIsDQogICAgICAgICAgICB0YWJpbmRleDogIi0xIg0KICAgICAgICB9KSkNCiAgICB9LCBlLnByb3RvdHlwZS5idWlsZERvdHMgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgIHZhciBlLCB0LCBvID0gdGhpczsNCiAgICAgICAgaWYgKCEwID09PSBvLm9wdGlvbnMuZG90cykgew0KICAgICAgICAgICAgZm9yIChvLiRzbGlkZXIuYWRkQ2xhc3MoInNsaWNrLWRvdHRlZCIpLCB0ID0gaSgiPHVsIC8+IikuYWRkQ2xhc3Moby5vcHRpb25zLmRvdHNDbGFzcyksIGUgPSAwOyBlIDw9IG8uZ2V0RG90Q291bnQoKTsgZSArPSAxKSB0LmFwcGVuZChpKCI8bGkgLz4iKS5hcHBlbmQoby5vcHRpb25zLmN1c3RvbVBhZ2luZy5jYWxsKHRoaXMsIG8sIGUpKSk7DQogICAgICAgICAgICBvLiRkb3RzID0gdC5hcHBlbmRUbyhvLm9wdGlvbnMuYXBwZW5kRG90cyksIG8uJGRvdHMuZmluZCgibGkiKS5maXJzdCgpLmFkZENsYXNzKCJzbGljay1hY3RpdmUiKQ0KICAgICAgICB9DQogICAgfSwgZS5wcm90b3R5cGUuYnVpbGRPdXQgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgIHZhciBlID0gdGhpczsNCiAgICAgICAgZS4kc2xpZGVzID0gZS4kc2xpZGVyLmNoaWxkcmVuKGUub3B0aW9ucy5zbGlkZSArICI6bm90KC5zbGljay1jbG9uZWQpIikuYWRkQ2xhc3MoInNsaWNrLXNsaWRlIiksIGUuc2xpZGVDb3VudCA9IGUuJHNsaWRlcy5sZW5ndGgsIGUuJHNsaWRlcy5lYWNoKGZ1bmN0aW9uIChlLCB0KSB7DQogICAgICAgICAgICBpKHQpLmF0dHIoImRhdGEtc2xpY2staW5kZXgiLCBlKS5kYXRhKCJvcmlnaW5hbFN0eWxpbmciLCBpKHQpLmF0dHIoInN0eWxlIikgfHwgIiIpDQogICAgICAgIH0pLCBlLiRzbGlkZXIuYWRkQ2xhc3MoInNsaWNrLXNsaWRlciIpLCBlLiRzbGlkZVRyYWNrID0gMCA9PT0gZS5zbGlkZUNvdW50ID8gaSgnPGRpdiBjbGFzcz0ic2xpY2stdHJhY2siLz4nKS5hcHBlbmRUbyhlLiRzbGlkZXIpIDogZS4kc2xpZGVzLndyYXBBbGwoJzxkaXYgY2xhc3M9InNsaWNrLXRyYWNrIi8+JykucGFyZW50KCksIGUuJGxpc3QgPSBlLiRzbGlkZVRyYWNrLndyYXAoJzxkaXYgY2xhc3M9InNsaWNrLWxpc3QiLz4nKS5wYXJlbnQoKSwgZS4kc2xpZGVUcmFjay5jc3MoIm9wYWNpdHkiLCAwKSwgITAgIT09IGUub3B0aW9ucy5jZW50ZXJNb2RlICYmICEwICE9PSBlLm9wdGlvbnMuc3dpcGVUb1NsaWRlIHx8IChlLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgPSAxKSwgaSgiaW1nW2RhdGEtbGF6eV0iLCBlLiRzbGlkZXIpLm5vdCgiW3NyY10iKS5hZGRDbGFzcygic2xpY2stbG9hZGluZyIpLCBlLnNldHVwSW5maW5pdGUoKSwgZS5idWlsZEFycm93cygpLCBlLmJ1aWxkRG90cygpLCBlLnVwZGF0ZURvdHMoKSwgZS5zZXRTbGlkZUNsYXNzZXMoIm51bWJlciIgPT0gdHlwZW9mIGUuY3VycmVudFNsaWRlID8gZS5jdXJyZW50U2xpZGUgOiAwKSwgITAgPT09IGUub3B0aW9ucy5kcmFnZ2FibGUgJiYgZS4kbGlzdC5hZGRDbGFzcygiZHJhZ2dhYmxlIikNCiAgICB9LCBlLnByb3RvdHlwZS5idWlsZFJvd3MgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgIHZhciBpLCBlLCB0LCBvLCBzLCBuLCByLCBsID0gdGhpczsNCiAgICAgICAgaWYgKG8gPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksIG4gPSBsLiRzbGlkZXIuY2hpbGRyZW4oKSwgbC5vcHRpb25zLnJvd3MgPiAxKSB7DQogICAgICAgICAgICBmb3IgKHIgPSBsLm9wdGlvbnMuc2xpZGVzUGVyUm93ICogbC5vcHRpb25zLnJvd3MsIHMgPSBNYXRoLmNlaWwobi5sZW5ndGggLyByKSwgaSA9IDA7IGkgPCBzOyBpKyspIHsNCiAgICAgICAgICAgICAgICB2YXIgZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOw0KICAgICAgICAgICAgICAgIGZvciAoZSA9IDA7IGUgPCBsLm9wdGlvbnMucm93czsgZSsrKSB7DQogICAgICAgICAgICAgICAgICAgIHZhciBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7DQogICAgICAgICAgICAgICAgICAgIGZvciAodCA9IDA7IHQgPCBsLm9wdGlvbnMuc2xpZGVzUGVyUm93OyB0KyspIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjID0gaSAqIHIgKyAoZSAqIGwub3B0aW9ucy5zbGlkZXNQZXJSb3cgKyB0KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIG4uZ2V0KGMpICYmIGEuYXBwZW5kQ2hpbGQobi5nZXQoYykpDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgZC5hcHBlbmRDaGlsZChhKQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBvLmFwcGVuZENoaWxkKGQpDQogICAgICAgICAgICB9DQogICAgICAgICAgICBsLiRzbGlkZXIuZW1wdHkoKS5hcHBlbmQobyksIGwuJHNsaWRlci5jaGlsZHJlbigpLmNoaWxkcmVuKCkuY2hpbGRyZW4oKS5jc3Moew0KICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAgLyBsLm9wdGlvbnMuc2xpZGVzUGVyUm93ICsgIiUiLA0KICAgICAgICAgICAgICAgIGRpc3BsYXk6ICJpbmxpbmUtYmxvY2siDQogICAgICAgICAgICB9KQ0KICAgICAgICB9DQogICAgfSwgZS5wcm90b3R5cGUuY2hlY2tSZXNwb25zaXZlID0gZnVuY3Rpb24gKGUsIHQpIHsNCiAgICAgICAgdmFyIG8sIHMsIG4sIHIgPSB0aGlzLA0KICAgICAgICAgICAgbCA9ICExLA0KICAgICAgICAgICAgZCA9IHIuJHNsaWRlci53aWR0aCgpLA0KICAgICAgICAgICAgYSA9IHdpbmRvdy5pbm5lcldpZHRoIHx8IGkod2luZG93KS53aWR0aCgpOw0KICAgICAgICBpZiAoIndpbmRvdyIgPT09IHIucmVzcG9uZFRvID8gbiA9IGEgOiAic2xpZGVyIiA9PT0gci5yZXNwb25kVG8gPyBuID0gZCA6ICJtaW4iID09PSByLnJlc3BvbmRUbyAmJiAobiA9IE1hdGgubWluKGEsIGQpKSwgci5vcHRpb25zLnJlc3BvbnNpdmUgJiYgci5vcHRpb25zLnJlc3BvbnNpdmUubGVuZ3RoICYmIG51bGwgIT09IHIub3B0aW9ucy5yZXNwb25zaXZlKSB7DQogICAgICAgICAgICBzID0gbnVsbDsNCiAgICAgICAgICAgIGZvciAobyBpbiByLmJyZWFrcG9pbnRzKSByLmJyZWFrcG9pbnRzLmhhc093blByb3BlcnR5KG8pICYmICghMSA9PT0gci5vcmlnaW5hbFNldHRpbmdzLm1vYmlsZUZpcnN0ID8gbiA8IHIuYnJlYWtwb2ludHNbb10gJiYgKHMgPSByLmJyZWFrcG9pbnRzW29dKSA6IG4gPiByLmJyZWFrcG9pbnRzW29dICYmIChzID0gci5icmVha3BvaW50c1tvXSkpOw0KICAgICAgICAgICAgbnVsbCAhPT0gcyA/IG51bGwgIT09IHIuYWN0aXZlQnJlYWtwb2ludCA/IChzICE9PSByLmFjdGl2ZUJyZWFrcG9pbnQgfHwgdCkgJiYgKHIuYWN0aXZlQnJlYWtwb2ludCA9IHMsICJ1bnNsaWNrIiA9PT0gci5icmVha3BvaW50U2V0dGluZ3Nbc10gPyByLnVuc2xpY2socykgOiAoci5vcHRpb25zID0gaS5leHRlbmQoe30sIHIub3JpZ2luYWxTZXR0aW5ncywgci5icmVha3BvaW50U2V0dGluZ3Nbc10pLCAhMCA9PT0gZSAmJiAoci5jdXJyZW50U2xpZGUgPSByLm9wdGlvbnMuaW5pdGlhbFNsaWRlKSwgci5yZWZyZXNoKGUpKSwgbCA9IHMpIDogKHIuYWN0aXZlQnJlYWtwb2ludCA9IHMsICJ1bnNsaWNrIiA9PT0gci5icmVha3BvaW50U2V0dGluZ3Nbc10gPyByLnVuc2xpY2socykgOiAoci5vcHRpb25zID0gaS5leHRlbmQoe30sIHIub3JpZ2luYWxTZXR0aW5ncywgci5icmVha3BvaW50U2V0dGluZ3Nbc10pLCAhMCA9PT0gZSAmJiAoci5jdXJyZW50U2xpZGUgPSByLm9wdGlvbnMuaW5pdGlhbFNsaWRlKSwgci5yZWZyZXNoKGUpKSwgbCA9IHMpIDogbnVsbCAhPT0gci5hY3RpdmVCcmVha3BvaW50ICYmIChyLmFjdGl2ZUJyZWFrcG9pbnQgPSBudWxsLCByLm9wdGlvbnMgPSByLm9yaWdpbmFsU2V0dGluZ3MsICEwID09PSBlICYmIChyLmN1cnJlbnRTbGlkZSA9IHIub3B0aW9ucy5pbml0aWFsU2xpZGUpLCByLnJlZnJlc2goZSksIGwgPSBzKSwgZSB8fCAhMSA9PT0gbCB8fCByLiRzbGlkZXIudHJpZ2dlcigiYnJlYWtwb2ludCIsIFtyLCBsXSkNCiAgICAgICAgfQ0KICAgIH0sIGUucHJvdG90eXBlLmNoYW5nZVNsaWRlID0gZnVuY3Rpb24gKGUsIHQpIHsNCiAgICAgICAgdmFyIG8sIHMsIG4sIHIgPSB0aGlzLA0KICAgICAgICAgICAgbCA9IGkoZS5jdXJyZW50VGFyZ2V0KTsNCiAgICAgICAgc3dpdGNoIChsLmlzKCJhIikgJiYgZS5wcmV2ZW50RGVmYXVsdCgpLCBsLmlzKCJsaSIpIHx8IChsID0gbC5jbG9zZXN0KCJsaSIpKSwgbiA9IHIuc2xpZGVDb3VudCAlIHIub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCAhPSAwLCBvID0gbiA/IDAgOiAoci5zbGlkZUNvdW50IC0gci5jdXJyZW50U2xpZGUpICUgci5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsLCBlLmRhdGEubWVzc2FnZSkgew0KICAgICAgICAgICAgY2FzZSAicHJldmlvdXMiOg0KICAgICAgICAgICAgICAgIHMgPSAwID09PSBvID8gci5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsIDogci5vcHRpb25zLnNsaWRlc1RvU2hvdyAtIG8sIHIuc2xpZGVDb3VudCA+IHIub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiYgci5zbGlkZUhhbmRsZXIoci5jdXJyZW50U2xpZGUgLSBzLCAhMSwgdCk7DQogICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICBjYXNlICJuZXh0IjoNCiAgICAgICAgICAgICAgICBzID0gMCA9PT0gbyA/IHIub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCA6IG8sIHIuc2xpZGVDb3VudCA+IHIub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiYgci5zbGlkZUhhbmRsZXIoci5jdXJyZW50U2xpZGUgKyBzLCAhMSwgdCk7DQogICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICBjYXNlICJpbmRleCI6DQogICAgICAgICAgICAgICAgdmFyIGQgPSAwID09PSBlLmRhdGEuaW5kZXggPyAwIDogZS5kYXRhLmluZGV4IHx8IGwuaW5kZXgoKSAqIHIub3B0aW9ucy5zbGlkZXNUb1Njcm9sbDsNCiAgICAgICAgICAgICAgICByLnNsaWRlSGFuZGxlcihyLmNoZWNrTmF2aWdhYmxlKGQpLCAhMSwgdCksIGwuY2hpbGRyZW4oKS50cmlnZ2VyKCJmb2N1cyIpOw0KICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgZGVmYXVsdDoNCiAgICAgICAgICAgICAgICByZXR1cm4NCiAgICAgICAgfQ0KICAgIH0sIGUucHJvdG90eXBlLmNoZWNrTmF2aWdhYmxlID0gZnVuY3Rpb24gKGkpIHsNCiAgICAgICAgdmFyIGUsIHQ7DQogICAgICAgIGlmIChlID0gdGhpcy5nZXROYXZpZ2FibGVJbmRleGVzKCksIHQgPSAwLCBpID4gZVtlLmxlbmd0aCAtIDFdKSBpID0gZVtlLmxlbmd0aCAtIDFdOw0KICAgICAgICBlbHNlDQogICAgICAgICAgICBmb3IgKHZhciBvIGluIGUpIHsNCiAgICAgICAgICAgICAgICBpZiAoaSA8IGVbb10pIHsNCiAgICAgICAgICAgICAgICAgICAgaSA9IHQ7DQogICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHQgPSBlW29dDQogICAgICAgICAgICB9DQogICAgICAgIHJldHVybiBpDQogICAgfSwgZS5wcm90b3R5cGUuY2xlYW5VcEV2ZW50cyA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgdmFyIGUgPSB0aGlzOw0KICAgICAgICBlLm9wdGlvbnMuZG90cyAmJiBudWxsICE9PSBlLiRkb3RzICYmIChpKCJsaSIsIGUuJGRvdHMpLm9mZigiY2xpY2suc2xpY2siLCBlLmNoYW5nZVNsaWRlKS5vZmYoIm1vdXNlZW50ZXIuc2xpY2siLCBpLnByb3h5KGUuaW50ZXJydXB0LCBlLCAhMCkpLm9mZigibW91c2VsZWF2ZS5zbGljayIsIGkucHJveHkoZS5pbnRlcnJ1cHQsIGUsICExKSksICEwID09PSBlLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSAmJiBlLiRkb3RzLm9mZigia2V5ZG93bi5zbGljayIsIGUua2V5SGFuZGxlcikpLCBlLiRzbGlkZXIub2ZmKCJmb2N1cy5zbGljayBibHVyLnNsaWNrIiksICEwID09PSBlLm9wdGlvbnMuYXJyb3dzICYmIGUuc2xpZGVDb3VudCA+IGUub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiYgKGUuJHByZXZBcnJvdyAmJiBlLiRwcmV2QXJyb3cub2ZmKCJjbGljay5zbGljayIsIGUuY2hhbmdlU2xpZGUpLCBlLiRuZXh0QXJyb3cgJiYgZS4kbmV4dEFycm93Lm9mZigiY2xpY2suc2xpY2siLCBlLmNoYW5nZVNsaWRlKSwgITAgPT09IGUub3B0aW9ucy5hY2Nlc3NpYmlsaXR5ICYmIChlLiRwcmV2QXJyb3cgJiYgZS4kcHJldkFycm93Lm9mZigia2V5ZG93bi5zbGljayIsIGUua2V5SGFuZGxlciksIGUuJG5leHRBcnJvdyAmJiBlLiRuZXh0QXJyb3cub2ZmKCJrZXlkb3duLnNsaWNrIiwgZS5rZXlIYW5kbGVyKSkpLCBlLiRsaXN0Lm9mZigidG91Y2hzdGFydC5zbGljayBtb3VzZWRvd24uc2xpY2siLCBlLnN3aXBlSGFuZGxlciksIGUuJGxpc3Qub2ZmKCJ0b3VjaG1vdmUuc2xpY2sgbW91c2Vtb3ZlLnNsaWNrIiwgZS5zd2lwZUhhbmRsZXIpLCBlLiRsaXN0Lm9mZigidG91Y2hlbmQuc2xpY2sgbW91c2V1cC5zbGljayIsIGUuc3dpcGVIYW5kbGVyKSwgZS4kbGlzdC5vZmYoInRvdWNoY2FuY2VsLnNsaWNrIG1vdXNlbGVhdmUuc2xpY2siLCBlLnN3aXBlSGFuZGxlciksIGUuJGxpc3Qub2ZmKCJjbGljay5zbGljayIsIGUuY2xpY2tIYW5kbGVyKSwgaShkb2N1bWVudCkub2ZmKGUudmlzaWJpbGl0eUNoYW5nZSwgZS52aXNpYmlsaXR5KSwgZS5jbGVhblVwU2xpZGVFdmVudHMoKSwgITAgPT09IGUub3B0aW9ucy5hY2Nlc3NpYmlsaXR5ICYmIGUuJGxpc3Qub2ZmKCJrZXlkb3duLnNsaWNrIiwgZS5rZXlIYW5kbGVyKSwgITAgPT09IGUub3B0aW9ucy5mb2N1c09uU2VsZWN0ICYmIGkoZS4kc2xpZGVUcmFjaykuY2hpbGRyZW4oKS5vZmYoImNsaWNrLnNsaWNrIiwgZS5zZWxlY3RIYW5kbGVyKSwgaSh3aW5kb3cpLm9mZigib3JpZW50YXRpb25jaGFuZ2Uuc2xpY2suc2xpY2stIiArIGUuaW5zdGFuY2VVaWQsIGUub3JpZW50YXRpb25DaGFuZ2UpLCBpKHdpbmRvdykub2ZmKCJyZXNpemUuc2xpY2suc2xpY2stIiArIGUuaW5zdGFuY2VVaWQsIGUucmVzaXplKSwgaSgiW2RyYWdnYWJsZSE9dHJ1ZV0iLCBlLiRzbGlkZVRyYWNrKS5vZmYoImRyYWdzdGFydCIsIGUucHJldmVudERlZmF1bHQpLCBpKHdpbmRvdykub2ZmKCJsb2FkLnNsaWNrLnNsaWNrLSIgKyBlLmluc3RhbmNlVWlkLCBlLnNldFBvc2l0aW9uKQ0KICAgIH0sIGUucHJvdG90eXBlLmNsZWFuVXBTbGlkZUV2ZW50cyA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgdmFyIGUgPSB0aGlzOw0KICAgICAgICBlLiRsaXN0Lm9mZigibW91c2VlbnRlci5zbGljayIsIGkucHJveHkoZS5pbnRlcnJ1cHQsIGUsICEwKSksIGUuJGxpc3Qub2ZmKCJtb3VzZWxlYXZlLnNsaWNrIiwgaS5wcm94eShlLmludGVycnVwdCwgZSwgITEpKQ0KICAgIH0sIGUucHJvdG90eXBlLmNsZWFuVXBSb3dzID0gZnVuY3Rpb24gKCkgew0KICAgICAgICB2YXIgaSwgZSA9IHRoaXM7DQogICAgICAgIGUub3B0aW9ucy5yb3dzID4gMSAmJiAoKGkgPSBlLiRzbGlkZXMuY2hpbGRyZW4oKS5jaGlsZHJlbigpKS5yZW1vdmVBdHRyKCJzdHlsZSIpLCBlLiRzbGlkZXIuZW1wdHkoKS5hcHBlbmQoaSkpDQogICAgfSwgZS5wcm90b3R5cGUuY2xpY2tIYW5kbGVyID0gZnVuY3Rpb24gKGkpIHsNCiAgICAgICAgITEgPT09IHRoaXMuc2hvdWxkQ2xpY2sgJiYgKGkuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksIGkuc3RvcFByb3BhZ2F0aW9uKCksIGkucHJldmVudERlZmF1bHQoKSkNCiAgICB9LCBlLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKGUpIHsNCiAgICAgICAgdmFyIHQgPSB0aGlzOw0KICAgICAgICB0LmF1dG9QbGF5Q2xlYXIoKSwgdC50b3VjaE9iamVjdCA9IHt9LCB0LmNsZWFuVXBFdmVudHMoKSwgaSgiLnNsaWNrLWNsb25lZCIsIHQuJHNsaWRlcikuZGV0YWNoKCksIHQuJGRvdHMgJiYgdC4kZG90cy5yZW1vdmUoKSwgdC4kcHJldkFycm93ICYmIHQuJHByZXZBcnJvdy5sZW5ndGggJiYgKHQuJHByZXZBcnJvdy5yZW1vdmVDbGFzcygic2xpY2stZGlzYWJsZWQgc2xpY2stYXJyb3cgc2xpY2staGlkZGVuIikucmVtb3ZlQXR0cigiYXJpYS1oaWRkZW4gYXJpYS1kaXNhYmxlZCB0YWJpbmRleCIpLmNzcygiZGlzcGxheSIsICIiKSwgdC5odG1sRXhwci50ZXN0KHQub3B0aW9ucy5wcmV2QXJyb3cpICYmIHQuJHByZXZBcnJvdy5yZW1vdmUoKSksIHQuJG5leHRBcnJvdyAmJiB0LiRuZXh0QXJyb3cubGVuZ3RoICYmICh0LiRuZXh0QXJyb3cucmVtb3ZlQ2xhc3MoInNsaWNrLWRpc2FibGVkIHNsaWNrLWFycm93IHNsaWNrLWhpZGRlbiIpLnJlbW92ZUF0dHIoImFyaWEtaGlkZGVuIGFyaWEtZGlzYWJsZWQgdGFiaW5kZXgiKS5jc3MoImRpc3BsYXkiLCAiIiksIHQuaHRtbEV4cHIudGVzdCh0Lm9wdGlvbnMubmV4dEFycm93KSAmJiB0LiRuZXh0QXJyb3cucmVtb3ZlKCkpLCB0LiRzbGlkZXMgJiYgKHQuJHNsaWRlcy5yZW1vdmVDbGFzcygic2xpY2stc2xpZGUgc2xpY2stYWN0aXZlIHNsaWNrLWNlbnRlciBzbGljay12aXNpYmxlIHNsaWNrLWN1cnJlbnQiKS5yZW1vdmVBdHRyKCJhcmlhLWhpZGRlbiIpLnJlbW92ZUF0dHIoImRhdGEtc2xpY2staW5kZXgiKS5lYWNoKGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgIGkodGhpcykuYXR0cigic3R5bGUiLCBpKHRoaXMpLmRhdGEoIm9yaWdpbmFsU3R5bGluZyIpKQ0KICAgICAgICB9KSwgdC4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmRldGFjaCgpLCB0LiRzbGlkZVRyYWNrLmRldGFjaCgpLCB0LiRsaXN0LmRldGFjaCgpLCB0LiRzbGlkZXIuYXBwZW5kKHQuJHNsaWRlcykpLCB0LmNsZWFuVXBSb3dzKCksIHQuJHNsaWRlci5yZW1vdmVDbGFzcygic2xpY2stc2xpZGVyIiksIHQuJHNsaWRlci5yZW1vdmVDbGFzcygic2xpY2staW5pdGlhbGl6ZWQiKSwgdC4kc2xpZGVyLnJlbW92ZUNsYXNzKCJzbGljay1kb3R0ZWQiKSwgdC51bnNsaWNrZWQgPSAhMCwgZSB8fCB0LiRzbGlkZXIudHJpZ2dlcigiZGVzdHJveSIsIFt0XSkNCiAgICB9LCBlLnByb3RvdHlwZS5kaXNhYmxlVHJhbnNpdGlvbiA9IGZ1bmN0aW9uIChpKSB7DQogICAgICAgIHZhciBlID0gdGhpcywNCiAgICAgICAgICAgIHQgPSB7fTsNCiAgICAgICAgdFtlLnRyYW5zaXRpb25UeXBlXSA9ICIiLCAhMSA9PT0gZS5vcHRpb25zLmZhZGUgPyBlLiRzbGlkZVRyYWNrLmNzcyh0KSA6IGUuJHNsaWRlcy5lcShpKS5jc3ModCkNCiAgICB9LCBlLnByb3RvdHlwZS5mYWRlU2xpZGUgPSBmdW5jdGlvbiAoaSwgZSkgew0KICAgICAgICB2YXIgdCA9IHRoaXM7DQogICAgICAgICExID09PSB0LmNzc1RyYW5zaXRpb25zID8gKHQuJHNsaWRlcy5lcShpKS5jc3Moew0KICAgICAgICAgICAgekluZGV4OiB0Lm9wdGlvbnMuekluZGV4DQogICAgICAgIH0pLCB0LiRzbGlkZXMuZXEoaSkuYW5pbWF0ZSh7DQogICAgICAgICAgICBvcGFjaXR5OiAxDQogICAgICAgIH0sIHQub3B0aW9ucy5zcGVlZCwgdC5vcHRpb25zLmVhc2luZywgZSkpIDogKHQuYXBwbHlUcmFuc2l0aW9uKGkpLCB0LiRzbGlkZXMuZXEoaSkuY3NzKHsNCiAgICAgICAgICAgIG9wYWNpdHk6IDEsDQogICAgICAgICAgICB6SW5kZXg6IHQub3B0aW9ucy56SW5kZXgNCiAgICAgICAgfSksIGUgJiYgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICB0LmRpc2FibGVUcmFuc2l0aW9uKGkpLCBlLmNhbGwoKQ0KICAgICAgICB9LCB0Lm9wdGlvbnMuc3BlZWQpKQ0KICAgIH0sIGUucHJvdG90eXBlLmZhZGVTbGlkZU91dCA9IGZ1bmN0aW9uIChpKSB7DQogICAgICAgIHZhciBlID0gdGhpczsNCiAgICAgICAgITEgPT09IGUuY3NzVHJhbnNpdGlvbnMgPyBlLiRzbGlkZXMuZXEoaSkuYW5pbWF0ZSh7DQogICAgICAgICAgICBvcGFjaXR5OiAwLA0KICAgICAgICAgICAgekluZGV4OiBlLm9wdGlvbnMuekluZGV4IC0gMg0KICAgICAgICB9LCBlLm9wdGlvbnMuc3BlZWQsIGUub3B0aW9ucy5lYXNpbmcpIDogKGUuYXBwbHlUcmFuc2l0aW9uKGkpLCBlLiRzbGlkZXMuZXEoaSkuY3NzKHsNCiAgICAgICAgICAgIG9wYWNpdHk6IDAsDQogICAgICAgICAgICB6SW5kZXg6IGUub3B0aW9ucy56SW5kZXggLSAyDQogICAgICAgIH0pKQ0KICAgIH0sIGUucHJvdG90eXBlLmZpbHRlclNsaWRlcyA9IGUucHJvdG90eXBlLnNsaWNrRmlsdGVyID0gZnVuY3Rpb24gKGkpIHsNCiAgICAgICAgdmFyIGUgPSB0aGlzOw0KICAgICAgICBudWxsICE9PSBpICYmIChlLiRzbGlkZXNDYWNoZSA9IGUuJHNsaWRlcywgZS51bmxvYWQoKSwgZS4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmRldGFjaCgpLCBlLiRzbGlkZXNDYWNoZS5maWx0ZXIoaSkuYXBwZW5kVG8oZS4kc2xpZGVUcmFjayksIGUucmVpbml0KCkpDQogICAgfSwgZS5wcm90b3R5cGUuZm9jdXNIYW5kbGVyID0gZnVuY3Rpb24gKCkgew0KICAgICAgICB2YXIgZSA9IHRoaXM7DQogICAgICAgIGUuJHNsaWRlci5vZmYoImZvY3VzLnNsaWNrIGJsdXIuc2xpY2siKS5vbigiZm9jdXMuc2xpY2sgYmx1ci5zbGljayIsICIqIiwgZnVuY3Rpb24gKHQpIHsNCiAgICAgICAgICAgIHQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7DQogICAgICAgICAgICB2YXIgbyA9IGkodGhpcyk7DQogICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgICAgICBlLm9wdGlvbnMucGF1c2VPbkZvY3VzICYmIChlLmZvY3Vzc2VkID0gby5pcygiOmZvY3VzIiksIGUuYXV0b1BsYXkoKSkNCiAgICAgICAgICAgIH0sIDApDQogICAgICAgIH0pDQogICAgfSwgZS5wcm90b3R5cGUuZ2V0Q3VycmVudCA9IGUucHJvdG90eXBlLnNsaWNrQ3VycmVudFNsaWRlID0gZnVuY3Rpb24gKCkgew0KICAgICAgICByZXR1cm4gdGhpcy5jdXJyZW50U2xpZGUNCiAgICB9LCBlLnByb3RvdHlwZS5nZXREb3RDb3VudCA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgdmFyIGkgPSB0aGlzLA0KICAgICAgICAgICAgZSA9IDAsDQogICAgICAgICAgICB0ID0gMCwNCiAgICAgICAgICAgIG8gPSAwOw0KICAgICAgICBpZiAoITAgPT09IGkub3B0aW9ucy5pbmZpbml0ZSkNCiAgICAgICAgICAgIGlmIChpLnNsaWRlQ291bnQgPD0gaS5vcHRpb25zLnNsaWRlc1RvU2hvdykgKytvOw0KICAgICAgICAgICAgZWxzZQ0KICAgICAgICAgICAgICAgIGZvciAoOyBlIDwgaS5zbGlkZUNvdW50OykgKytvLCBlID0gdCArIGkub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCwgdCArPSBpLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgPD0gaS5vcHRpb25zLnNsaWRlc1RvU2hvdyA/IGkub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCA6IGkub3B0aW9ucy5zbGlkZXNUb1Nob3c7DQogICAgICAgIGVsc2UgaWYgKCEwID09PSBpLm9wdGlvbnMuY2VudGVyTW9kZSkgbyA9IGkuc2xpZGVDb3VudDsNCiAgICAgICAgZWxzZSBpZiAoaS5vcHRpb25zLmFzTmF2Rm9yKQ0KICAgICAgICAgICAgZm9yICg7IGUgPCBpLnNsaWRlQ291bnQ7KSArK28sIGUgPSB0ICsgaS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsLCB0ICs9IGkub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCA8PSBpLm9wdGlvbnMuc2xpZGVzVG9TaG93ID8gaS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsIDogaS5vcHRpb25zLnNsaWRlc1RvU2hvdzsNCiAgICAgICAgZWxzZSBvID0gMSArIE1hdGguY2VpbCgoaS5zbGlkZUNvdW50IC0gaS5vcHRpb25zLnNsaWRlc1RvU2hvdykgLyBpLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwpOw0KICAgICAgICByZXR1cm4gbyAtIDENCiAgICB9LCBlLnByb3RvdHlwZS5nZXRMZWZ0ID0gZnVuY3Rpb24gKGkpIHsNCiAgICAgICAgdmFyIGUsIHQsIG8sIHMsIG4gPSB0aGlzLA0KICAgICAgICAgICAgciA9IDA7DQogICAgICAgIHJldHVybiBuLnNsaWRlT2Zmc2V0ID0gMCwgdCA9IG4uJHNsaWRlcy5maXJzdCgpLm91dGVySGVpZ2h0KCEwKSwgITAgPT09IG4ub3B0aW9ucy5pbmZpbml0ZSA/IChuLnNsaWRlQ291bnQgPiBuLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmIChuLnNsaWRlT2Zmc2V0ID0gbi5zbGlkZVdpZHRoICogbi5vcHRpb25zLnNsaWRlc1RvU2hvdyAqIC0xLCBzID0gLTEsICEwID09PSBuLm9wdGlvbnMudmVydGljYWwgJiYgITAgPT09IG4ub3B0aW9ucy5jZW50ZXJNb2RlICYmICgyID09PSBuLm9wdGlvbnMuc2xpZGVzVG9TaG93ID8gcyA9IC0xLjUgOiAxID09PSBuLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmIChzID0gLTIpKSwgciA9IHQgKiBuLm9wdGlvbnMuc2xpZGVzVG9TaG93ICogcyksIG4uc2xpZGVDb3VudCAlIG4ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCAhPSAwICYmIGkgKyBuLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgPiBuLnNsaWRlQ291bnQgJiYgbi5zbGlkZUNvdW50ID4gbi5vcHRpb25zLnNsaWRlc1RvU2hvdyAmJiAoaSA+IG4uc2xpZGVDb3VudCA/IChuLnNsaWRlT2Zmc2V0ID0gKG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLSAoaSAtIG4uc2xpZGVDb3VudCkpICogbi5zbGlkZVdpZHRoICogLTEsIHIgPSAobi5vcHRpb25zLnNsaWRlc1RvU2hvdyAtIChpIC0gbi5zbGlkZUNvdW50KSkgKiB0ICogLTEpIDogKG4uc2xpZGVPZmZzZXQgPSBuLnNsaWRlQ291bnQgJSBuLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgKiBuLnNsaWRlV2lkdGggKiAtMSwgciA9IG4uc2xpZGVDb3VudCAlIG4ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCAqIHQgKiAtMSkpKSA6IGkgKyBuLm9wdGlvbnMuc2xpZGVzVG9TaG93ID4gbi5zbGlkZUNvdW50ICYmIChuLnNsaWRlT2Zmc2V0ID0gKGkgKyBuLm9wdGlvbnMuc2xpZGVzVG9TaG93IC0gbi5zbGlkZUNvdW50KSAqIG4uc2xpZGVXaWR0aCwgciA9IChpICsgbi5vcHRpb25zLnNsaWRlc1RvU2hvdyAtIG4uc2xpZGVDb3VudCkgKiB0KSwgbi5zbGlkZUNvdW50IDw9IG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiYgKG4uc2xpZGVPZmZzZXQgPSAwLCByID0gMCksICEwID09PSBuLm9wdGlvbnMuY2VudGVyTW9kZSAmJiBuLnNsaWRlQ291bnQgPD0gbi5vcHRpb25zLnNsaWRlc1RvU2hvdyA/IG4uc2xpZGVPZmZzZXQgPSBuLnNsaWRlV2lkdGggKiBNYXRoLmZsb29yKG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cpIC8gMiAtIG4uc2xpZGVXaWR0aCAqIG4uc2xpZGVDb3VudCAvIDIgOiAhMCA9PT0gbi5vcHRpb25zLmNlbnRlck1vZGUgJiYgITAgPT09IG4ub3B0aW9ucy5pbmZpbml0ZSA/IG4uc2xpZGVPZmZzZXQgKz0gbi5zbGlkZVdpZHRoICogTWF0aC5mbG9vcihuLm9wdGlvbnMuc2xpZGVzVG9TaG93IC8gMikgLSBuLnNsaWRlV2lkdGggOiAhMCA9PT0gbi5vcHRpb25zLmNlbnRlck1vZGUgJiYgKG4uc2xpZGVPZmZzZXQgPSAwLCBuLnNsaWRlT2Zmc2V0ICs9IG4uc2xpZGVXaWR0aCAqIE1hdGguZmxvb3Iobi5vcHRpb25zLnNsaWRlc1RvU2hvdyAvIDIpKSwgZSA9ICExID09PSBuLm9wdGlvbnMudmVydGljYWwgPyBpICogbi5zbGlkZVdpZHRoICogLTEgKyBuLnNsaWRlT2Zmc2V0IDogaSAqIHQgKiAtMSArIHIsICEwID09PSBuLm9wdGlvbnMudmFyaWFibGVXaWR0aCAmJiAobyA9IG4uc2xpZGVDb3VudCA8PSBuLm9wdGlvbnMuc2xpZGVzVG9TaG93IHx8ICExID09PSBuLm9wdGlvbnMuaW5maW5pdGUgPyBuLiRzbGlkZVRyYWNrLmNoaWxkcmVuKCIuc2xpY2stc2xpZGUiKS5lcShpKSA6IG4uJHNsaWRlVHJhY2suY2hpbGRyZW4oIi5zbGljay1zbGlkZSIpLmVxKGkgKyBuLm9wdGlvbnMuc2xpZGVzVG9TaG93KSwgZSA9ICEwID09PSBuLm9wdGlvbnMucnRsID8gb1swXSA/IC0xICogKG4uJHNsaWRlVHJhY2sud2lkdGgoKSAtIG9bMF0ub2Zmc2V0TGVmdCAtIG8ud2lkdGgoKSkgOiAwIDogb1swXSA/IC0xICogb1swXS5vZmZzZXRMZWZ0IDogMCwgITAgPT09IG4ub3B0aW9ucy5jZW50ZXJNb2RlICYmIChvID0gbi5zbGlkZUNvdW50IDw9IG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgfHwgITEgPT09IG4ub3B0aW9ucy5pbmZpbml0ZSA/IG4uJHNsaWRlVHJhY2suY2hpbGRyZW4oIi5zbGljay1zbGlkZSIpLmVxKGkpIDogbi4kc2xpZGVUcmFjay5jaGlsZHJlbigiLnNsaWNrLXNsaWRlIikuZXEoaSArIG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgKyAxKSwgZSA9ICEwID09PSBuLm9wdGlvbnMucnRsID8gb1swXSA/IC0xICogKG4uJHNsaWRlVHJhY2sud2lkdGgoKSAtIG9bMF0ub2Zmc2V0TGVmdCAtIG8ud2lkdGgoKSkgOiAwIDogb1swXSA/IC0xICogb1swXS5vZmZzZXRMZWZ0IDogMCwgZSArPSAobi4kbGlzdC53aWR0aCgpIC0gby5vdXRlcldpZHRoKCkpIC8gMikpLCBlDQogICAgfSwgZS5wcm90b3R5cGUuZ2V0T3B0aW9uID0gZS5wcm90b3R5cGUuc2xpY2tHZXRPcHRpb24gPSBmdW5jdGlvbiAoaSkgew0KICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25zW2ldDQogICAgfSwgZS5wcm90b3R5cGUuZ2V0TmF2aWdhYmxlSW5kZXhlcyA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgdmFyIGksIGUgPSB0aGlzLA0KICAgICAgICAgICAgdCA9IDAsDQogICAgICAgICAgICBvID0gMCwNCiAgICAgICAgICAgIHMgPSBbXTsNCiAgICAgICAgZm9yICghMSA9PT0gZS5vcHRpb25zLmluZmluaXRlID8gaSA9IGUuc2xpZGVDb3VudCA6ICh0ID0gLTEgKiBlLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwsIG8gPSAtMSAqIGUub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCwgaSA9IDIgKiBlLnNsaWRlQ291bnQpOyB0IDwgaTspIHMucHVzaCh0KSwgdCA9IG8gKyBlLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwsIG8gKz0gZS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsIDw9IGUub3B0aW9ucy5zbGlkZXNUb1Nob3cgPyBlLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgOiBlLm9wdGlvbnMuc2xpZGVzVG9TaG93Ow0KICAgICAgICByZXR1cm4gcw0KICAgIH0sIGUucHJvdG90eXBlLmdldFNsaWNrID0gZnVuY3Rpb24gKCkgew0KICAgICAgICByZXR1cm4gdGhpcw0KICAgIH0sIGUucHJvdG90eXBlLmdldFNsaWRlQ291bnQgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgIHZhciBlLCB0LCBvID0gdGhpczsNCiAgICAgICAgcmV0dXJuIHQgPSAhMCA9PT0gby5vcHRpb25zLmNlbnRlck1vZGUgPyBvLnNsaWRlV2lkdGggKiBNYXRoLmZsb29yKG8ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLyAyKSA6IDAsICEwID09PSBvLm9wdGlvbnMuc3dpcGVUb1NsaWRlID8gKG8uJHNsaWRlVHJhY2suZmluZCgiLnNsaWNrLXNsaWRlIikuZWFjaChmdW5jdGlvbiAocywgbikgew0KICAgICAgICAgICAgaWYgKG4ub2Zmc2V0TGVmdCAtIHQgKyBpKG4pLm91dGVyV2lkdGgoKSAvIDIgPiAtMSAqIG8uc3dpcGVMZWZ0KSByZXR1cm4gZSA9IG4sICExDQogICAgICAgIH0pLCBNYXRoLmFicyhpKGUpLmF0dHIoImRhdGEtc2xpY2staW5kZXgiKSAtIG8uY3VycmVudFNsaWRlKSB8fCAxKSA6IG8ub3B0aW9ucy5zbGlkZXNUb1Njcm9sbA0KICAgIH0sIGUucHJvdG90eXBlLmdvVG8gPSBlLnByb3RvdHlwZS5zbGlja0dvVG8gPSBmdW5jdGlvbiAoaSwgZSkgew0KICAgICAgICB0aGlzLmNoYW5nZVNsaWRlKHsNCiAgICAgICAgICAgIGRhdGE6IHsNCiAgICAgICAgICAgICAgICBtZXNzYWdlOiAiaW5kZXgiLA0KICAgICAgICAgICAgICAgIGluZGV4OiBwYXJzZUludChpKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LCBlKQ0KICAgIH0sIGUucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoZSkgew0KICAgICAgICB2YXIgdCA9IHRoaXM7DQogICAgICAgIGkodC4kc2xpZGVyKS5oYXNDbGFzcygic2xpY2staW5pdGlhbGl6ZWQiKSB8fCAoaSh0LiRzbGlkZXIpLmFkZENsYXNzKCJzbGljay1pbml0aWFsaXplZCIpLCB0LmJ1aWxkUm93cygpLCB0LmJ1aWxkT3V0KCksIHQuc2V0UHJvcHMoKSwgdC5zdGFydExvYWQoKSwgdC5sb2FkU2xpZGVyKCksIHQuaW5pdGlhbGl6ZUV2ZW50cygpLCB0LnVwZGF0ZUFycm93cygpLCB0LnVwZGF0ZURvdHMoKSwgdC5jaGVja1Jlc3BvbnNpdmUoITApLCB0LmZvY3VzSGFuZGxlcigpKSwgZSAmJiB0LiRzbGlkZXIudHJpZ2dlcigiaW5pdCIsIFt0XSksICEwID09PSB0Lm9wdGlvbnMuYWNjZXNzaWJpbGl0eSAmJiB0LmluaXRBREEoKSwgdC5vcHRpb25zLmF1dG9wbGF5ICYmICh0LnBhdXNlZCA9ICExLCB0LmF1dG9QbGF5KCkpDQogICAgfSwgZS5wcm90b3R5cGUuaW5pdEFEQSA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgdmFyIGUgPSB0aGlzLA0KICAgICAgICAgICAgdCA9IE1hdGguY2VpbChlLnNsaWRlQ291bnQgLyBlLm9wdGlvbnMuc2xpZGVzVG9TaG93KSwNCiAgICAgICAgICAgIG8gPSBlLmdldE5hdmlnYWJsZUluZGV4ZXMoKS5maWx0ZXIoZnVuY3Rpb24gKGkpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gaSA+PSAwICYmIGkgPCBlLnNsaWRlQ291bnQNCiAgICAgICAgICAgIH0pOw0KICAgICAgICBlLiRzbGlkZXMuYWRkKGUuJHNsaWRlVHJhY2suZmluZCgiLnNsaWNrLWNsb25lZCIpKS5hdHRyKHsNCiAgICAgICAgICAgICJhcmlhLWhpZGRlbiI6ICJ0cnVlIiwNCiAgICAgICAgICAgIHRhYmluZGV4OiAiLTEiDQogICAgICAgIH0pLmZpbmQoImEsIGlucHV0LCBidXR0b24sIHNlbGVjdCIpLmF0dHIoew0KICAgICAgICAgICAgdGFiaW5kZXg6ICItMSINCiAgICAgICAgfSksIG51bGwgIT09IGUuJGRvdHMgJiYgKGUuJHNsaWRlcy5ub3QoZS4kc2xpZGVUcmFjay5maW5kKCIuc2xpY2stY2xvbmVkIikpLmVhY2goZnVuY3Rpb24gKHQpIHsNCiAgICAgICAgICAgIHZhciBzID0gby5pbmRleE9mKHQpOw0KICAgICAgICAgICAgaSh0aGlzKS5hdHRyKHsNCiAgICAgICAgICAgICAgICByb2xlOiAidGFicGFuZWwiLA0KICAgICAgICAgICAgICAgIGlkOiAic2xpY2stc2xpZGUiICsgZS5pbnN0YW5jZVVpZCArIHQsDQogICAgICAgICAgICAgICAgdGFiaW5kZXg6IC0xDQogICAgICAgICAgICB9KSwgLTEgIT09IHMgJiYgaSh0aGlzKS5hdHRyKHsNCiAgICAgICAgICAgICAgICAiYXJpYS1kZXNjcmliZWRieSI6ICJzbGljay1zbGlkZS1jb250cm9sIiArIGUuaW5zdGFuY2VVaWQgKyBzDQogICAgICAgICAgICB9KQ0KICAgICAgICB9KSwgZS4kZG90cy5hdHRyKCJyb2xlIiwgInRhYmxpc3QiKS5maW5kKCJsaSIpLmVhY2goZnVuY3Rpb24gKHMpIHsNCiAgICAgICAgICAgIHZhciBuID0gb1tzXTsNCiAgICAgICAgICAgIGkodGhpcykuYXR0cih7DQogICAgICAgICAgICAgICAgcm9sZTogInByZXNlbnRhdGlvbiINCiAgICAgICAgICAgIH0pLCBpKHRoaXMpLmZpbmQoImJ1dHRvbiIpLmZpcnN0KCkuYXR0cih7DQogICAgICAgICAgICAgICAgcm9sZTogInRhYiIsDQogICAgICAgICAgICAgICAgaWQ6ICJzbGljay1zbGlkZS1jb250cm9sIiArIGUuaW5zdGFuY2VVaWQgKyBzLA0KICAgICAgICAgICAgICAgICJhcmlhLWNvbnRyb2xzIjogInNsaWNrLXNsaWRlIiArIGUuaW5zdGFuY2VVaWQgKyBuLA0KICAgICAgICAgICAgICAgICJhcmlhLWxhYmVsIjogcyArIDEgKyAiIG9mICIgKyB0LA0KICAgICAgICAgICAgICAgICJhcmlhLXNlbGVjdGVkIjogbnVsbCwNCiAgICAgICAgICAgICAgICB0YWJpbmRleDogIi0xIg0KICAgICAgICAgICAgfSkNCiAgICAgICAgfSkuZXEoZS5jdXJyZW50U2xpZGUpLmZpbmQoImJ1dHRvbiIpLmF0dHIoew0KICAgICAgICAgICAgImFyaWEtc2VsZWN0ZWQiOiAidHJ1ZSIsDQogICAgICAgICAgICB0YWJpbmRleDogIjAiDQogICAgICAgIH0pLmVuZCgpKTsNCiAgICAgICAgZm9yICh2YXIgcyA9IGUuY3VycmVudFNsaWRlLCBuID0gcyArIGUub3B0aW9ucy5zbGlkZXNUb1Nob3c7IHMgPCBuOyBzKyspIGUuJHNsaWRlcy5lcShzKS5hdHRyKCJ0YWJpbmRleCIsIDApOw0KICAgICAgICBlLmFjdGl2YXRlQURBKCkNCiAgICB9LCBlLnByb3RvdHlwZS5pbml0QXJyb3dFdmVudHMgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgIHZhciBpID0gdGhpczsNCiAgICAgICAgITAgPT09IGkub3B0aW9ucy5hcnJvd3MgJiYgaS5zbGlkZUNvdW50ID4gaS5vcHRpb25zLnNsaWRlc1RvU2hvdyAmJiAoaS4kcHJldkFycm93Lm9mZigiY2xpY2suc2xpY2siKS5vbigiY2xpY2suc2xpY2siLCB7DQogICAgICAgICAgICBtZXNzYWdlOiAicHJldmlvdXMiDQogICAgICAgIH0sIGkuY2hhbmdlU2xpZGUpLCBpLiRuZXh0QXJyb3cub2ZmKCJjbGljay5zbGljayIpLm9uKCJjbGljay5zbGljayIsIHsNCiAgICAgICAgICAgIG1lc3NhZ2U6ICJuZXh0Ig0KICAgICAgICB9LCBpLmNoYW5nZVNsaWRlKSwgITAgPT09IGkub3B0aW9ucy5hY2Nlc3NpYmlsaXR5ICYmIChpLiRwcmV2QXJyb3cub24oImtleWRvd24uc2xpY2siLCBpLmtleUhhbmRsZXIpLCBpLiRuZXh0QXJyb3cub24oImtleWRvd24uc2xpY2siLCBpLmtleUhhbmRsZXIpKSkNCiAgICB9LCBlLnByb3RvdHlwZS5pbml0RG90RXZlbnRzID0gZnVuY3Rpb24gKCkgew0KICAgICAgICB2YXIgZSA9IHRoaXM7DQogICAgICAgICEwID09PSBlLm9wdGlvbnMuZG90cyAmJiAoaSgibGkiLCBlLiRkb3RzKS5vbigiY2xpY2suc2xpY2siLCB7DQogICAgICAgICAgICBtZXNzYWdlOiAiaW5kZXgiDQogICAgICAgIH0sIGUuY2hhbmdlU2xpZGUpLCAhMCA9PT0gZS5vcHRpb25zLmFjY2Vzc2liaWxpdHkgJiYgZS4kZG90cy5vbigia2V5ZG93bi5zbGljayIsIGUua2V5SGFuZGxlcikpLCAhMCA9PT0gZS5vcHRpb25zLmRvdHMgJiYgITAgPT09IGUub3B0aW9ucy5wYXVzZU9uRG90c0hvdmVyICYmIGkoImxpIiwgZS4kZG90cykub24oIm1vdXNlZW50ZXIuc2xpY2siLCBpLnByb3h5KGUuaW50ZXJydXB0LCBlLCAhMCkpLm9uKCJtb3VzZWxlYXZlLnNsaWNrIiwgaS5wcm94eShlLmludGVycnVwdCwgZSwgITEpKQ0KICAgIH0sIGUucHJvdG90eXBlLmluaXRTbGlkZUV2ZW50cyA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgdmFyIGUgPSB0aGlzOw0KICAgICAgICBlLm9wdGlvbnMucGF1c2VPbkhvdmVyICYmIChlLiRsaXN0Lm9uKCJtb3VzZWVudGVyLnNsaWNrIiwgaS5wcm94eShlLmludGVycnVwdCwgZSwgITApKSwgZS4kbGlzdC5vbigibW91c2VsZWF2ZS5zbGljayIsIGkucHJveHkoZS5pbnRlcnJ1cHQsIGUsICExKSkpDQogICAgfSwgZS5wcm90b3R5cGUuaW5pdGlhbGl6ZUV2ZW50cyA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgdmFyIGUgPSB0aGlzOw0KICAgICAgICBlLmluaXRBcnJvd0V2ZW50cygpLCBlLmluaXREb3RFdmVudHMoKSwgZS5pbml0U2xpZGVFdmVudHMoKSwgZS4kbGlzdC5vbigidG91Y2hzdGFydC5zbGljayBtb3VzZWRvd24uc2xpY2siLCB7DQogICAgICAgICAgICBhY3Rpb246ICJzdGFydCINCiAgICAgICAgfSwgZS5zd2lwZUhhbmRsZXIpLCBlLiRsaXN0Lm9uKCJ0b3VjaG1vdmUuc2xpY2sgbW91c2Vtb3ZlLnNsaWNrIiwgew0KICAgICAgICAgICAgYWN0aW9uOiAibW92ZSINCiAgICAgICAgfSwgZS5zd2lwZUhhbmRsZXIpLCBlLiRsaXN0Lm9uKCJ0b3VjaGVuZC5zbGljayBtb3VzZXVwLnNsaWNrIiwgew0KICAgICAgICAgICAgYWN0aW9uOiAiZW5kIg0KICAgICAgICB9LCBlLnN3aXBlSGFuZGxlciksIGUuJGxpc3Qub24oInRvdWNoY2FuY2VsLnNsaWNrIG1vdXNlbGVhdmUuc2xpY2siLCB7DQogICAgICAgICAgICBhY3Rpb246ICJlbmQiDQogICAgICAgIH0sIGUuc3dpcGVIYW5kbGVyKSwgZS4kbGlzdC5vbigiY2xpY2suc2xpY2siLCBlLmNsaWNrSGFuZGxlciksIGkoZG9jdW1lbnQpLm9uKGUudmlzaWJpbGl0eUNoYW5nZSwgaS5wcm94eShlLnZpc2liaWxpdHksIGUpKSwgITAgPT09IGUub3B0aW9ucy5hY2Nlc3NpYmlsaXR5ICYmIGUuJGxpc3Qub24oImtleWRvd24uc2xpY2siLCBlLmtleUhhbmRsZXIpLCAhMCA9PT0gZS5vcHRpb25zLmZvY3VzT25TZWxlY3QgJiYgaShlLiRzbGlkZVRyYWNrKS5jaGlsZHJlbigpLm9uKCJjbGljay5zbGljayIsIGUuc2VsZWN0SGFuZGxlciksIGkod2luZG93KS5vbigib3JpZW50YXRpb25jaGFuZ2Uuc2xpY2suc2xpY2stIiArIGUuaW5zdGFuY2VVaWQsIGkucHJveHkoZS5vcmllbnRhdGlvbkNoYW5nZSwgZSkpLCBpKHdpbmRvdykub24oInJlc2l6ZS5zbGljay5zbGljay0iICsgZS5pbnN0YW5jZVVpZCwgaS5wcm94eShlLnJlc2l6ZSwgZSkpLCBpKCJbZHJhZ2dhYmxlIT10cnVlXSIsIGUuJHNsaWRlVHJhY2spLm9uKCJkcmFnc3RhcnQiLCBlLnByZXZlbnREZWZhdWx0KSwgaSh3aW5kb3cpLm9uKCJsb2FkLnNsaWNrLnNsaWNrLSIgKyBlLmluc3RhbmNlVWlkLCBlLnNldFBvc2l0aW9uKSwgaShlLnNldFBvc2l0aW9uKQ0KICAgIH0sIGUucHJvdG90eXBlLmluaXRVSSA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgdmFyIGkgPSB0aGlzOw0KICAgICAgICAhMCA9PT0gaS5vcHRpb25zLmFycm93cyAmJiBpLnNsaWRlQ291bnQgPiBpLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmIChpLiRwcmV2QXJyb3cuc2hvdygpLCBpLiRuZXh0QXJyb3cuc2hvdygpKSwgITAgPT09IGkub3B0aW9ucy5kb3RzICYmIGkuc2xpZGVDb3VudCA+IGkub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiYgaS4kZG90cy5zaG93KCkNCiAgICB9LCBlLnByb3RvdHlwZS5rZXlIYW5kbGVyID0gZnVuY3Rpb24gKGkpIHsNCiAgICAgICAgdmFyIGUgPSB0aGlzOw0KICAgICAgICBpLnRhcmdldC50YWdOYW1lLm1hdGNoKCJURVhUQVJFQXxJTlBVVHxTRUxFQ1QiKSB8fCAoMzcgPT09IGkua2V5Q29kZSAmJiAhMCA9PT0gZS5vcHRpb25zLmFjY2Vzc2liaWxpdHkgPyBlLmNoYW5nZVNsaWRlKHsNCiAgICAgICAgICAgIGRhdGE6IHsNCiAgICAgICAgICAgICAgICBtZXNzYWdlOiAhMCA9PT0gZS5vcHRpb25zLnJ0bCA/ICJuZXh0IiA6ICJwcmV2aW91cyINCiAgICAgICAgICAgIH0NCiAgICAgICAgfSkgOiAzOSA9PT0gaS5rZXlDb2RlICYmICEwID09PSBlLm9wdGlvbnMuYWNjZXNzaWJpbGl0eSAmJiBlLmNoYW5nZVNsaWRlKHsNCiAgICAgICAgICAgIGRhdGE6IHsNCiAgICAgICAgICAgICAgICBtZXNzYWdlOiAhMCA9PT0gZS5vcHRpb25zLnJ0bCA/ICJwcmV2aW91cyIgOiAibmV4dCINCiAgICAgICAgICAgIH0NCiAgICAgICAgfSkpDQogICAgfSwgZS5wcm90b3R5cGUubGF6eUxvYWQgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgIGZ1bmN0aW9uIGUoZSkgew0KICAgICAgICAgICAgaSgiaW1nW2RhdGEtbGF6eV0iLCBlKS5lYWNoKGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgICAgICB2YXIgZSA9IGkodGhpcyksDQogICAgICAgICAgICAgICAgICAgIHQgPSBpKHRoaXMpLmF0dHIoImRhdGEtbGF6eSIpLA0KICAgICAgICAgICAgICAgICAgICBvID0gaSh0aGlzKS5hdHRyKCJkYXRhLXNyY3NldCIpLA0KICAgICAgICAgICAgICAgICAgICBzID0gaSh0aGlzKS5hdHRyKCJkYXRhLXNpemVzIikgfHwgbi4kc2xpZGVyLmF0dHIoImRhdGEtc2l6ZXMiKSwNCiAgICAgICAgICAgICAgICAgICAgciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImltZyIpOw0KICAgICAgICAgICAgICAgIHIub25sb2FkID0gZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgICAgICAgICBlLmFuaW1hdGUoew0KICAgICAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMA0KICAgICAgICAgICAgICAgICAgICB9LCAxMDAsIGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIG8gJiYgKGUuYXR0cigic3Jjc2V0IiwgbyksIHMgJiYgZS5hdHRyKCJzaXplcyIsIHMpKSwgZS5hdHRyKCJzcmMiLCB0KS5hbmltYXRlKHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAxDQogICAgICAgICAgICAgICAgICAgICAgICB9LCAyMDAsIGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnJlbW92ZUF0dHIoImRhdGEtbGF6eSBkYXRhLXNyY3NldCBkYXRhLXNpemVzIikucmVtb3ZlQ2xhc3MoInNsaWNrLWxvYWRpbmciKQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSksIG4uJHNsaWRlci50cmlnZ2VyKCJsYXp5TG9hZGVkIiwgW24sIGUsIHRdKQ0KICAgICAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIH0sIHIub25lcnJvciA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgICAgICAgICAgICAgZS5yZW1vdmVBdHRyKCJkYXRhLWxhenkiKS5yZW1vdmVDbGFzcygic2xpY2stbG9hZGluZyIpLmFkZENsYXNzKCJzbGljay1sYXp5bG9hZC1lcnJvciIpLCBuLiRzbGlkZXIudHJpZ2dlcigibGF6eUxvYWRFcnJvciIsIFtuLCBlLCB0XSkNCiAgICAgICAgICAgICAgICB9LCByLnNyYyA9IHQNCiAgICAgICAgICAgIH0pDQogICAgICAgIH0NCiAgICAgICAgdmFyIHQsIG8sIHMsIG4gPSB0aGlzOw0KICAgICAgICBpZiAoITAgPT09IG4ub3B0aW9ucy5jZW50ZXJNb2RlID8gITAgPT09IG4ub3B0aW9ucy5pbmZpbml0ZSA/IHMgPSAobyA9IG4uY3VycmVudFNsaWRlICsgKG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLyAyICsgMSkpICsgbi5vcHRpb25zLnNsaWRlc1RvU2hvdyArIDIgOiAobyA9IE1hdGgubWF4KDAsIG4uY3VycmVudFNsaWRlIC0gKG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgLyAyICsgMSkpLCBzID0gbi5vcHRpb25zLnNsaWRlc1RvU2hvdyAvIDIgKyAxICsgMiArIG4uY3VycmVudFNsaWRlKSA6IChvID0gbi5vcHRpb25zLmluZmluaXRlID8gbi5vcHRpb25zLnNsaWRlc1RvU2hvdyArIG4uY3VycmVudFNsaWRlIDogbi5jdXJyZW50U2xpZGUsIHMgPSBNYXRoLmNlaWwobyArIG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cpLCAhMCA9PT0gbi5vcHRpb25zLmZhZGUgJiYgKG8gPiAwICYmIG8tLSwgcyA8PSBuLnNsaWRlQ291bnQgJiYgcysrKSksIHQgPSBuLiRzbGlkZXIuZmluZCgiLnNsaWNrLXNsaWRlIikuc2xpY2UobywgcyksICJhbnRpY2lwYXRlZCIgPT09IG4ub3B0aW9ucy5sYXp5TG9hZCkNCiAgICAgICAgICAgIGZvciAodmFyIHIgPSBvIC0gMSwgbCA9IHMsIGQgPSBuLiRzbGlkZXIuZmluZCgiLnNsaWNrLXNsaWRlIiksIGEgPSAwOyBhIDwgbi5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsOyBhKyspIHIgPCAwICYmIChyID0gbi5zbGlkZUNvdW50IC0gMSksIHQgPSAodCA9IHQuYWRkKGQuZXEocikpKS5hZGQoZC5lcShsKSksIHItLSwgbCsrOw0KICAgICAgICBlKHQpLCBuLnNsaWRlQ291bnQgPD0gbi5vcHRpb25zLnNsaWRlc1RvU2hvdyA/IGUobi4kc2xpZGVyLmZpbmQoIi5zbGljay1zbGlkZSIpKSA6IG4uY3VycmVudFNsaWRlID49IG4uc2xpZGVDb3VudCAtIG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgPyBlKG4uJHNsaWRlci5maW5kKCIuc2xpY2stY2xvbmVkIikuc2xpY2UoMCwgbi5vcHRpb25zLnNsaWRlc1RvU2hvdykpIDogMCA9PT0gbi5jdXJyZW50U2xpZGUgJiYgZShuLiRzbGlkZXIuZmluZCgiLnNsaWNrLWNsb25lZCIpLnNsaWNlKC0xICogbi5vcHRpb25zLnNsaWRlc1RvU2hvdykpDQogICAgfSwgZS5wcm90b3R5cGUubG9hZFNsaWRlciA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgdmFyIGkgPSB0aGlzOw0KICAgICAgICBpLnNldFBvc2l0aW9uKCksIGkuJHNsaWRlVHJhY2suY3NzKHsNCiAgICAgICAgICAgIG9wYWNpdHk6IDENCiAgICAgICAgfSksIGkuJHNsaWRlci5yZW1vdmVDbGFzcygic2xpY2stbG9hZGluZyIpLCBpLmluaXRVSSgpLCAicHJvZ3Jlc3NpdmUiID09PSBpLm9wdGlvbnMubGF6eUxvYWQgJiYgaS5wcm9ncmVzc2l2ZUxhenlMb2FkKCkNCiAgICB9LCBlLnByb3RvdHlwZS5uZXh0ID0gZS5wcm90b3R5cGUuc2xpY2tOZXh0ID0gZnVuY3Rpb24gKCkgew0KICAgICAgICB0aGlzLmNoYW5nZVNsaWRlKHsNCiAgICAgICAgICAgIGRhdGE6IHsNCiAgICAgICAgICAgICAgICBtZXNzYWdlOiAibmV4dCINCiAgICAgICAgICAgIH0NCiAgICAgICAgfSkNCiAgICB9LCBlLnByb3RvdHlwZS5vcmllbnRhdGlvbkNoYW5nZSA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgdmFyIGkgPSB0aGlzOw0KICAgICAgICBpLmNoZWNrUmVzcG9uc2l2ZSgpLCBpLnNldFBvc2l0aW9uKCkNCiAgICB9LCBlLnByb3RvdHlwZS5wYXVzZSA9IGUucHJvdG90eXBlLnNsaWNrUGF1c2UgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgIHZhciBpID0gdGhpczsNCiAgICAgICAgaS5hdXRvUGxheUNsZWFyKCksIGkucGF1c2VkID0gITANCiAgICB9LCBlLnByb3RvdHlwZS5wbGF5ID0gZS5wcm90b3R5cGUuc2xpY2tQbGF5ID0gZnVuY3Rpb24gKCkgew0KICAgICAgICB2YXIgaSA9IHRoaXM7DQogICAgICAgIGkuYXV0b1BsYXkoKSwgaS5vcHRpb25zLmF1dG9wbGF5ID0gITAsIGkucGF1c2VkID0gITEsIGkuZm9jdXNzZWQgPSAhMSwgaS5pbnRlcnJ1cHRlZCA9ICExDQogICAgfSwgZS5wcm90b3R5cGUucG9zdFNsaWRlID0gZnVuY3Rpb24gKGUpIHsNCiAgICAgICAgdmFyIHQgPSB0aGlzOw0KICAgICAgICB0LnVuc2xpY2tlZCB8fCAodC4kc2xpZGVyLnRyaWdnZXIoImFmdGVyQ2hhbmdlIiwgW3QsIGVdKSwgdC5hbmltYXRpbmcgPSAhMSwgdC5zbGlkZUNvdW50ID4gdC5vcHRpb25zLnNsaWRlc1RvU2hvdyAmJiB0LnNldFBvc2l0aW9uKCksIHQuc3dpcGVMZWZ0ID0gbnVsbCwgdC5vcHRpb25zLmF1dG9wbGF5ICYmIHQuYXV0b1BsYXkoKSwgITAgPT09IHQub3B0aW9ucy5hY2Nlc3NpYmlsaXR5ICYmICh0LmluaXRBREEoKSwgdC5vcHRpb25zLmZvY3VzT25DaGFuZ2UgJiYgaSh0LiRzbGlkZXMuZ2V0KHQuY3VycmVudFNsaWRlKSkuYXR0cigidGFiaW5kZXgiLCAwKS5mb2N1cygpKSkNCiAgICB9LCBlLnByb3RvdHlwZS5wcmV2ID0gZS5wcm90b3R5cGUuc2xpY2tQcmV2ID0gZnVuY3Rpb24gKCkgew0KICAgICAgICB0aGlzLmNoYW5nZVNsaWRlKHsNCiAgICAgICAgICAgIGRhdGE6IHsNCiAgICAgICAgICAgICAgICBtZXNzYWdlOiAicHJldmlvdXMiDQogICAgICAgICAgICB9DQogICAgICAgIH0pDQogICAgfSwgZS5wcm90b3R5cGUucHJldmVudERlZmF1bHQgPSBmdW5jdGlvbiAoaSkgew0KICAgICAgICBpLnByZXZlbnREZWZhdWx0KCkNCiAgICB9LCBlLnByb3RvdHlwZS5wcm9ncmVzc2l2ZUxhenlMb2FkID0gZnVuY3Rpb24gKGUpIHsNCiAgICAgICAgZSA9IGUgfHwgMTsNCiAgICAgICAgdmFyIHQsIG8sIHMsIG4sIHIsIGwgPSB0aGlzLA0KICAgICAgICAgICAgZCA9IGkoImltZ1tkYXRhLWxhenldIiwgbC4kc2xpZGVyKTsNCiAgICAgICAgZC5sZW5ndGggPyAodCA9IGQuZmlyc3QoKSwgbyA9IHQuYXR0cigiZGF0YS1sYXp5IiksIHMgPSB0LmF0dHIoImRhdGEtc3Jjc2V0IiksIG4gPSB0LmF0dHIoImRhdGEtc2l6ZXMiKSB8fCBsLiRzbGlkZXIuYXR0cigiZGF0YS1zaXplcyIpLCAociA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImltZyIpKS5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICBzICYmICh0LmF0dHIoInNyY3NldCIsIHMpLCBuICYmIHQuYXR0cigic2l6ZXMiLCBuKSksIHQuYXR0cigic3JjIiwgbykucmVtb3ZlQXR0cigiZGF0YS1sYXp5IGRhdGEtc3Jjc2V0IGRhdGEtc2l6ZXMiKS5yZW1vdmVDbGFzcygic2xpY2stbG9hZGluZyIpLCAhMCA9PT0gbC5vcHRpb25zLmFkYXB0aXZlSGVpZ2h0ICYmIGwuc2V0UG9zaXRpb24oKSwgbC4kc2xpZGVyLnRyaWdnZXIoImxhenlMb2FkZWQiLCBbbCwgdCwgb10pLCBsLnByb2dyZXNzaXZlTGF6eUxvYWQoKQ0KICAgICAgICB9LCByLm9uZXJyb3IgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICBlIDwgMyA/IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgICAgIGwucHJvZ3Jlc3NpdmVMYXp5TG9hZChlICsgMSkNCiAgICAgICAgICAgIH0sIDUwMCkgOiAodC5yZW1vdmVBdHRyKCJkYXRhLWxhenkiKS5yZW1vdmVDbGFzcygic2xpY2stbG9hZGluZyIpLmFkZENsYXNzKCJzbGljay1sYXp5bG9hZC1lcnJvciIpLCBsLiRzbGlkZXIudHJpZ2dlcigibGF6eUxvYWRFcnJvciIsIFtsLCB0LCBvXSksIGwucHJvZ3Jlc3NpdmVMYXp5TG9hZCgpKQ0KICAgICAgICB9LCByLnNyYyA9IG8pIDogbC4kc2xpZGVyLnRyaWdnZXIoImFsbEltYWdlc0xvYWRlZCIsIFtsXSkNCiAgICB9LCBlLnByb3RvdHlwZS5yZWZyZXNoID0gZnVuY3Rpb24gKGUpIHsNCiAgICAgICAgdmFyIHQsIG8sIHMgPSB0aGlzOw0KICAgICAgICBvID0gcy5zbGlkZUNvdW50IC0gcy5vcHRpb25zLnNsaWRlc1RvU2hvdywgIXMub3B0aW9ucy5pbmZpbml0ZSAmJiBzLmN1cnJlbnRTbGlkZSA+IG8gJiYgKHMuY3VycmVudFNsaWRlID0gbyksIHMuc2xpZGVDb3VudCA8PSBzLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmIChzLmN1cnJlbnRTbGlkZSA9IDApLCB0ID0gcy5jdXJyZW50U2xpZGUsIHMuZGVzdHJveSghMCksIGkuZXh0ZW5kKHMsIHMuaW5pdGlhbHMsIHsNCiAgICAgICAgICAgIGN1cnJlbnRTbGlkZTogdA0KICAgICAgICB9KSwgcy5pbml0KCksIGUgfHwgcy5jaGFuZ2VTbGlkZSh7DQogICAgICAgICAgICBkYXRhOiB7DQogICAgICAgICAgICAgICAgbWVzc2FnZTogImluZGV4IiwNCiAgICAgICAgICAgICAgICBpbmRleDogdA0KICAgICAgICAgICAgfQ0KICAgICAgICB9LCAhMSkNCiAgICB9LCBlLnByb3RvdHlwZS5yZWdpc3RlckJyZWFrcG9pbnRzID0gZnVuY3Rpb24gKCkgew0KICAgICAgICB2YXIgZSwgdCwgbywgcyA9IHRoaXMsDQogICAgICAgICAgICBuID0gcy5vcHRpb25zLnJlc3BvbnNpdmUgfHwgbnVsbDsNCiAgICAgICAgaWYgKCJhcnJheSIgPT09IGkudHlwZShuKSAmJiBuLmxlbmd0aCkgew0KICAgICAgICAgICAgcy5yZXNwb25kVG8gPSBzLm9wdGlvbnMucmVzcG9uZFRvIHx8ICJ3aW5kb3ciOw0KICAgICAgICAgICAgZm9yIChlIGluIG4pDQogICAgICAgICAgICAgICAgaWYgKG8gPSBzLmJyZWFrcG9pbnRzLmxlbmd0aCAtIDEsIG4uaGFzT3duUHJvcGVydHkoZSkpIHsNCiAgICAgICAgICAgICAgICAgICAgZm9yICh0ID0gbltlXS5icmVha3BvaW50OyBvID49IDA7KSBzLmJyZWFrcG9pbnRzW29dICYmIHMuYnJlYWtwb2ludHNbb10gPT09IHQgJiYgcy5icmVha3BvaW50cy5zcGxpY2UobywgMSksIG8tLTsNCiAgICAgICAgICAgICAgICAgICAgcy5icmVha3BvaW50cy5wdXNoKHQpLCBzLmJyZWFrcG9pbnRTZXR0aW5nc1t0XSA9IG5bZV0uc2V0dGluZ3MNCiAgICAgICAgICAgICAgICB9IHMuYnJlYWtwb2ludHMuc29ydChmdW5jdGlvbiAoaSwgZSkgew0KICAgICAgICAgICAgICAgIHJldHVybiBzLm9wdGlvbnMubW9iaWxlRmlyc3QgPyBpIC0gZSA6IGUgLSBpDQogICAgICAgICAgICB9KQ0KICAgICAgICB9DQogICAgfSwgZS5wcm90b3R5cGUucmVpbml0ID0gZnVuY3Rpb24gKCkgew0KICAgICAgICB2YXIgZSA9IHRoaXM7DQogICAgICAgIGUuJHNsaWRlcyA9IGUuJHNsaWRlVHJhY2suY2hpbGRyZW4oZS5vcHRpb25zLnNsaWRlKS5hZGRDbGFzcygic2xpY2stc2xpZGUiKSwgZS5zbGlkZUNvdW50ID0gZS4kc2xpZGVzLmxlbmd0aCwgZS5jdXJyZW50U2xpZGUgPj0gZS5zbGlkZUNvdW50ICYmIDAgIT09IGUuY3VycmVudFNsaWRlICYmIChlLmN1cnJlbnRTbGlkZSA9IGUuY3VycmVudFNsaWRlIC0gZS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKSwgZS5zbGlkZUNvdW50IDw9IGUub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiYgKGUuY3VycmVudFNsaWRlID0gMCksIGUucmVnaXN0ZXJCcmVha3BvaW50cygpLCBlLnNldFByb3BzKCksIGUuc2V0dXBJbmZpbml0ZSgpLCBlLmJ1aWxkQXJyb3dzKCksIGUudXBkYXRlQXJyb3dzKCksIGUuaW5pdEFycm93RXZlbnRzKCksIGUuYnVpbGREb3RzKCksIGUudXBkYXRlRG90cygpLCBlLmluaXREb3RFdmVudHMoKSwgZS5jbGVhblVwU2xpZGVFdmVudHMoKSwgZS5pbml0U2xpZGVFdmVudHMoKSwgZS5jaGVja1Jlc3BvbnNpdmUoITEsICEwKSwgITAgPT09IGUub3B0aW9ucy5mb2N1c09uU2VsZWN0ICYmIGkoZS4kc2xpZGVUcmFjaykuY2hpbGRyZW4oKS5vbigiY2xpY2suc2xpY2siLCBlLnNlbGVjdEhhbmRsZXIpLCBlLnNldFNsaWRlQ2xhc3NlcygibnVtYmVyIiA9PSB0eXBlb2YgZS5jdXJyZW50U2xpZGUgPyBlLmN1cnJlbnRTbGlkZSA6IDApLCBlLnNldFBvc2l0aW9uKCksIGUuZm9jdXNIYW5kbGVyKCksIGUucGF1c2VkID0gIWUub3B0aW9ucy5hdXRvcGxheSwgZS5hdXRvUGxheSgpLCBlLiRzbGlkZXIudHJpZ2dlcigicmVJbml0IiwgW2VdKQ0KICAgIH0sIGUucHJvdG90eXBlLnJlc2l6ZSA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgdmFyIGUgPSB0aGlzOw0KICAgICAgICBpKHdpbmRvdykud2lkdGgoKSAhPT0gZS53aW5kb3dXaWR0aCAmJiAoY2xlYXJUaW1lb3V0KGUud2luZG93RGVsYXkpLCBlLndpbmRvd0RlbGF5ID0gd2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgZS53aW5kb3dXaWR0aCA9IGkod2luZG93KS53aWR0aCgpLCBlLmNoZWNrUmVzcG9uc2l2ZSgpLCBlLnVuc2xpY2tlZCB8fCBlLnNldFBvc2l0aW9uKCkNCiAgICAgICAgfSwgNTApKQ0KICAgIH0sIGUucHJvdG90eXBlLnJlbW92ZVNsaWRlID0gZS5wcm90b3R5cGUuc2xpY2tSZW1vdmUgPSBmdW5jdGlvbiAoaSwgZSwgdCkgew0KICAgICAgICB2YXIgbyA9IHRoaXM7DQogICAgICAgIGlmIChpID0gImJvb2xlYW4iID09IHR5cGVvZiBpID8gITAgPT09IChlID0gaSkgPyAwIDogby5zbGlkZUNvdW50IC0gMSA6ICEwID09PSBlID8gLS1pIDogaSwgby5zbGlkZUNvdW50IDwgMSB8fCBpIDwgMCB8fCBpID4gby5zbGlkZUNvdW50IC0gMSkgcmV0dXJuICExOw0KICAgICAgICBvLnVubG9hZCgpLCAhMCA9PT0gdCA/IG8uJHNsaWRlVHJhY2suY2hpbGRyZW4oKS5yZW1vdmUoKSA6IG8uJHNsaWRlVHJhY2suY2hpbGRyZW4odGhpcy5vcHRpb25zLnNsaWRlKS5lcShpKS5yZW1vdmUoKSwgby4kc2xpZGVzID0gby4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLCBvLiRzbGlkZVRyYWNrLmNoaWxkcmVuKHRoaXMub3B0aW9ucy5zbGlkZSkuZGV0YWNoKCksIG8uJHNsaWRlVHJhY2suYXBwZW5kKG8uJHNsaWRlcyksIG8uJHNsaWRlc0NhY2hlID0gby4kc2xpZGVzLCBvLnJlaW5pdCgpDQogICAgfSwgZS5wcm90b3R5cGUuc2V0Q1NTID0gZnVuY3Rpb24gKGkpIHsNCiAgICAgICAgdmFyIGUsIHQsIG8gPSB0aGlzLA0KICAgICAgICAgICAgcyA9IHt9Ow0KICAgICAgICAhMCA9PT0gby5vcHRpb25zLnJ0bCAmJiAoaSA9IC1pKSwgZSA9ICJsZWZ0IiA9PSBvLnBvc2l0aW9uUHJvcCA/IE1hdGguY2VpbChpKSArICJweCIgOiAiMHB4IiwgdCA9ICJ0b3AiID09IG8ucG9zaXRpb25Qcm9wID8gTWF0aC5jZWlsKGkpICsgInB4IiA6ICIwcHgiLCBzW28ucG9zaXRpb25Qcm9wXSA9IGksICExID09PSBvLnRyYW5zZm9ybXNFbmFibGVkID8gby4kc2xpZGVUcmFjay5jc3MocykgOiAocyA9IHt9LCAhMSA9PT0gby5jc3NUcmFuc2l0aW9ucyA/IChzW28uYW5pbVR5cGVdID0gInRyYW5zbGF0ZSgiICsgZSArICIsICIgKyB0ICsgIikiLCBvLiRzbGlkZVRyYWNrLmNzcyhzKSkgOiAoc1tvLmFuaW1UeXBlXSA9ICJ0cmFuc2xhdGUzZCgiICsgZSArICIsICIgKyB0ICsgIiwgMHB4KSIsIG8uJHNsaWRlVHJhY2suY3NzKHMpKSkNCiAgICB9LCBlLnByb3RvdHlwZS5zZXREaW1lbnNpb25zID0gZnVuY3Rpb24gKCkgew0KICAgICAgICB2YXIgaSA9IHRoaXM7DQogICAgICAgICExID09PSBpLm9wdGlvbnMudmVydGljYWwgPyAhMCA9PT0gaS5vcHRpb25zLmNlbnRlck1vZGUgJiYgaS4kbGlzdC5jc3Moew0KICAgICAgICAgICAgcGFkZGluZzogIjBweCAiICsgaS5vcHRpb25zLmNlbnRlclBhZGRpbmcNCiAgICAgICAgfSkgOiAoaS4kbGlzdC5oZWlnaHQoaS4kc2xpZGVzLmZpcnN0KCkub3V0ZXJIZWlnaHQoITApICogaS5vcHRpb25zLnNsaWRlc1RvU2hvdyksICEwID09PSBpLm9wdGlvbnMuY2VudGVyTW9kZSAmJiBpLiRsaXN0LmNzcyh7DQogICAgICAgICAgICBwYWRkaW5nOiBpLm9wdGlvbnMuY2VudGVyUGFkZGluZyArICIgMHB4Ig0KICAgICAgICB9KSksIGkubGlzdFdpZHRoID0gaS4kbGlzdC53aWR0aCgpLCBpLmxpc3RIZWlnaHQgPSBpLiRsaXN0LmhlaWdodCgpLCAhMSA9PT0gaS5vcHRpb25zLnZlcnRpY2FsICYmICExID09PSBpLm9wdGlvbnMudmFyaWFibGVXaWR0aCA/IChpLnNsaWRlV2lkdGggPSBNYXRoLmNlaWwoaS5saXN0V2lkdGggLyBpLm9wdGlvbnMuc2xpZGVzVG9TaG93KSwgaS4kc2xpZGVUcmFjay53aWR0aChNYXRoLmNlaWwoaS5zbGlkZVdpZHRoICogaS4kc2xpZGVUcmFjay5jaGlsZHJlbigiLnNsaWNrLXNsaWRlIikubGVuZ3RoKSkpIDogITAgPT09IGkub3B0aW9ucy52YXJpYWJsZVdpZHRoID8gaS4kc2xpZGVUcmFjay53aWR0aCg1ZTMgKiBpLnNsaWRlQ291bnQpIDogKGkuc2xpZGVXaWR0aCA9IE1hdGguY2VpbChpLmxpc3RXaWR0aCksIGkuJHNsaWRlVHJhY2suaGVpZ2h0KE1hdGguY2VpbChpLiRzbGlkZXMuZmlyc3QoKS5vdXRlckhlaWdodCghMCkgKiBpLiRzbGlkZVRyYWNrLmNoaWxkcmVuKCIuc2xpY2stc2xpZGUiKS5sZW5ndGgpKSk7DQogICAgICAgIHZhciBlID0gaS4kc2xpZGVzLmZpcnN0KCkub3V0ZXJXaWR0aCghMCkgLSBpLiRzbGlkZXMuZmlyc3QoKS53aWR0aCgpOw0KICAgICAgICAhMSA9PT0gaS5vcHRpb25zLnZhcmlhYmxlV2lkdGggJiYgaS4kc2xpZGVUcmFjay5jaGlsZHJlbigiLnNsaWNrLXNsaWRlIikud2lkdGgoaS5zbGlkZVdpZHRoIC0gZSkNCiAgICB9LCBlLnByb3RvdHlwZS5zZXRGYWRlID0gZnVuY3Rpb24gKCkgew0KICAgICAgICB2YXIgZSwgdCA9IHRoaXM7DQogICAgICAgIHQuJHNsaWRlcy5lYWNoKGZ1bmN0aW9uIChvLCBzKSB7DQogICAgICAgICAgICBlID0gdC5zbGlkZVdpZHRoICogbyAqIC0xLCAhMCA9PT0gdC5vcHRpb25zLnJ0bCA/IGkocykuY3NzKHsNCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogInJlbGF0aXZlIiwNCiAgICAgICAgICAgICAgICByaWdodDogZSwNCiAgICAgICAgICAgICAgICB0b3A6IDAsDQogICAgICAgICAgICAgICAgekluZGV4OiB0Lm9wdGlvbnMuekluZGV4IC0gMiwNCiAgICAgICAgICAgICAgICBvcGFjaXR5OiAwDQogICAgICAgICAgICB9KSA6IGkocykuY3NzKHsNCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogInJlbGF0aXZlIiwNCiAgICAgICAgICAgICAgICBsZWZ0OiBlLA0KICAgICAgICAgICAgICAgIHRvcDogMCwNCiAgICAgICAgICAgICAgICB6SW5kZXg6IHQub3B0aW9ucy56SW5kZXggLSAyLA0KICAgICAgICAgICAgICAgIG9wYWNpdHk6IDANCiAgICAgICAgICAgIH0pDQogICAgICAgIH0pLCB0LiRzbGlkZXMuZXEodC5jdXJyZW50U2xpZGUpLmNzcyh7DQogICAgICAgICAgICB6SW5kZXg6IHQub3B0aW9ucy56SW5kZXggLSAxLA0KICAgICAgICAgICAgb3BhY2l0eTogMQ0KICAgICAgICB9KQ0KICAgIH0sIGUucHJvdG90eXBlLnNldEhlaWdodCA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgdmFyIGkgPSB0aGlzOw0KICAgICAgICBpZiAoMSA9PT0gaS5vcHRpb25zLnNsaWRlc1RvU2hvdyAmJiAhMCA9PT0gaS5vcHRpb25zLmFkYXB0aXZlSGVpZ2h0ICYmICExID09PSBpLm9wdGlvbnMudmVydGljYWwpIHsNCiAgICAgICAgICAgIHZhciBlID0gaS4kc2xpZGVzLmVxKGkuY3VycmVudFNsaWRlKS5vdXRlckhlaWdodCghMCk7DQogICAgICAgICAgICBpLiRsaXN0LmNzcygiaGVpZ2h0IiwgZSkNCiAgICAgICAgfQ0KICAgIH0sIGUucHJvdG90eXBlLnNldE9wdGlvbiA9IGUucHJvdG90eXBlLnNsaWNrU2V0T3B0aW9uID0gZnVuY3Rpb24gKCkgew0KICAgICAgICB2YXIgZSwgdCwgbywgcywgbiwgciA9IHRoaXMsDQogICAgICAgICAgICBsID0gITE7DQogICAgICAgIGlmICgib2JqZWN0IiA9PT0gaS50eXBlKGFyZ3VtZW50c1swXSkgPyAobyA9IGFyZ3VtZW50c1swXSwgbCA9IGFyZ3VtZW50c1sxXSwgbiA9ICJtdWx0aXBsZSIpIDogInN0cmluZyIgPT09IGkudHlwZShhcmd1bWVudHNbMF0pICYmIChvID0gYXJndW1lbnRzWzBdLCBzID0gYXJndW1lbnRzWzFdLCBsID0gYXJndW1lbnRzWzJdLCAicmVzcG9uc2l2ZSIgPT09IGFyZ3VtZW50c1swXSAmJiAiYXJyYXkiID09PSBpLnR5cGUoYXJndW1lbnRzWzFdKSA/IG4gPSAicmVzcG9uc2l2ZSIgOiB2b2lkIDAgIT09IGFyZ3VtZW50c1sxXSAmJiAobiA9ICJzaW5nbGUiKSksICJzaW5nbGUiID09PSBuKSByLm9wdGlvbnNbb10gPSBzOw0KICAgICAgICBlbHNlIGlmICgibXVsdGlwbGUiID09PSBuKSBpLmVhY2gobywgZnVuY3Rpb24gKGksIGUpIHsNCiAgICAgICAgICAgIHIub3B0aW9uc1tpXSA9IGUNCiAgICAgICAgfSk7DQogICAgICAgIGVsc2UgaWYgKCJyZXNwb25zaXZlIiA9PT0gbikNCiAgICAgICAgICAgIGZvciAodCBpbiBzKQ0KICAgICAgICAgICAgICAgIGlmICgiYXJyYXkiICE9PSBpLnR5cGUoci5vcHRpb25zLnJlc3BvbnNpdmUpKSByLm9wdGlvbnMucmVzcG9uc2l2ZSA9IFtzW3RdXTsNCiAgICAgICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgZm9yIChlID0gci5vcHRpb25zLnJlc3BvbnNpdmUubGVuZ3RoIC0gMTsgZSA+PSAwOykgci5vcHRpb25zLnJlc3BvbnNpdmVbZV0uYnJlYWtwb2ludCA9PT0gc1t0XS5icmVha3BvaW50ICYmIHIub3B0aW9ucy5yZXNwb25zaXZlLnNwbGljZShlLCAxKSwgZS0tOw0KICAgICAgICAgICAgICAgICAgICByLm9wdGlvbnMucmVzcG9uc2l2ZS5wdXNoKHNbdF0pDQogICAgICAgICAgICAgICAgfSBsICYmIChyLnVubG9hZCgpLCByLnJlaW5pdCgpKQ0KICAgIH0sIGUucHJvdG90eXBlLnNldFBvc2l0aW9uID0gZnVuY3Rpb24gKCkgew0KICAgICAgICB2YXIgaSA9IHRoaXM7DQogICAgICAgIGkuc2V0RGltZW5zaW9ucygpLCBpLnNldEhlaWdodCgpLCAhMSA9PT0gaS5vcHRpb25zLmZhZGUgPyBpLnNldENTUyhpLmdldExlZnQoaS5jdXJyZW50U2xpZGUpKSA6IGkuc2V0RmFkZSgpLCBpLiRzbGlkZXIudHJpZ2dlcigic2V0UG9zaXRpb24iLCBbaV0pDQogICAgfSwgZS5wcm90b3R5cGUuc2V0UHJvcHMgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgIHZhciBpID0gdGhpcywNCiAgICAgICAgICAgIGUgPSBkb2N1bWVudC5ib2R5LnN0eWxlOw0KICAgICAgICBpLnBvc2l0aW9uUHJvcCA9ICEwID09PSBpLm9wdGlvbnMudmVydGljYWwgPyAidG9wIiA6ICJsZWZ0IiwgInRvcCIgPT09IGkucG9zaXRpb25Qcm9wID8gaS4kc2xpZGVyLmFkZENsYXNzKCJzbGljay12ZXJ0aWNhbCIpIDogaS4kc2xpZGVyLnJlbW92ZUNsYXNzKCJzbGljay12ZXJ0aWNhbCIpLCB2b2lkIDAgPT09IGUuV2Via2l0VHJhbnNpdGlvbiAmJiB2b2lkIDAgPT09IGUuTW96VHJhbnNpdGlvbiAmJiB2b2lkIDAgPT09IGUubXNUcmFuc2l0aW9uIHx8ICEwID09PSBpLm9wdGlvbnMudXNlQ1NTICYmIChpLmNzc1RyYW5zaXRpb25zID0gITApLCBpLm9wdGlvbnMuZmFkZSAmJiAoIm51bWJlciIgPT0gdHlwZW9mIGkub3B0aW9ucy56SW5kZXggPyBpLm9wdGlvbnMuekluZGV4IDwgMyAmJiAoaS5vcHRpb25zLnpJbmRleCA9IDMpIDogaS5vcHRpb25zLnpJbmRleCA9IGkuZGVmYXVsdHMuekluZGV4KSwgdm9pZCAwICE9PSBlLk9UcmFuc2Zvcm0gJiYgKGkuYW5pbVR5cGUgPSAiT1RyYW5zZm9ybSIsIGkudHJhbnNmb3JtVHlwZSA9ICItby10cmFuc2Zvcm0iLCBpLnRyYW5zaXRpb25UeXBlID0gIk9UcmFuc2l0aW9uIiwgdm9pZCAwID09PSBlLnBlcnNwZWN0aXZlUHJvcGVydHkgJiYgdm9pZCAwID09PSBlLndlYmtpdFBlcnNwZWN0aXZlICYmIChpLmFuaW1UeXBlID0gITEpKSwgdm9pZCAwICE9PSBlLk1velRyYW5zZm9ybSAmJiAoaS5hbmltVHlwZSA9ICJNb3pUcmFuc2Zvcm0iLCBpLnRyYW5zZm9ybVR5cGUgPSAiLW1vei10cmFuc2Zvcm0iLCBpLnRyYW5zaXRpb25UeXBlID0gIk1velRyYW5zaXRpb24iLCB2b2lkIDAgPT09IGUucGVyc3BlY3RpdmVQcm9wZXJ0eSAmJiB2b2lkIDAgPT09IGUuTW96UGVyc3BlY3RpdmUgJiYgKGkuYW5pbVR5cGUgPSAhMSkpLCB2b2lkIDAgIT09IGUud2Via2l0VHJhbnNmb3JtICYmIChpLmFuaW1UeXBlID0gIndlYmtpdFRyYW5zZm9ybSIsIGkudHJhbnNmb3JtVHlwZSA9ICItd2Via2l0LXRyYW5zZm9ybSIsIGkudHJhbnNpdGlvblR5cGUgPSAid2Via2l0VHJhbnNpdGlvbiIsIHZvaWQgMCA9PT0gZS5wZXJzcGVjdGl2ZVByb3BlcnR5ICYmIHZvaWQgMCA9PT0gZS53ZWJraXRQZXJzcGVjdGl2ZSAmJiAoaS5hbmltVHlwZSA9ICExKSksIHZvaWQgMCAhPT0gZS5tc1RyYW5zZm9ybSAmJiAoaS5hbmltVHlwZSA9ICJtc1RyYW5zZm9ybSIsIGkudHJhbnNmb3JtVHlwZSA9ICItbXMtdHJhbnNmb3JtIiwgaS50cmFuc2l0aW9uVHlwZSA9ICJtc1RyYW5zaXRpb24iLCB2b2lkIDAgPT09IGUubXNUcmFuc2Zvcm0gJiYgKGkuYW5pbVR5cGUgPSAhMSkpLCB2b2lkIDAgIT09IGUudHJhbnNmb3JtICYmICExICE9PSBpLmFuaW1UeXBlICYmIChpLmFuaW1UeXBlID0gInRyYW5zZm9ybSIsIGkudHJhbnNmb3JtVHlwZSA9ICJ0cmFuc2Zvcm0iLCBpLnRyYW5zaXRpb25UeXBlID0gInRyYW5zaXRpb24iKSwgaS50cmFuc2Zvcm1zRW5hYmxlZCA9IGkub3B0aW9ucy51c2VUcmFuc2Zvcm0gJiYgbnVsbCAhPT0gaS5hbmltVHlwZSAmJiAhMSAhPT0gaS5hbmltVHlwZQ0KICAgIH0sIGUucHJvdG90eXBlLnNldFNsaWRlQ2xhc3NlcyA9IGZ1bmN0aW9uIChpKSB7DQogICAgICAgIHZhciBlLCB0LCBvLCBzLCBuID0gdGhpczsNCiAgICAgICAgaWYgKHQgPSBuLiRzbGlkZXIuZmluZCgiLnNsaWNrLXNsaWRlIikucmVtb3ZlQ2xhc3MoInNsaWNrLWFjdGl2ZSBzbGljay1jZW50ZXIgc2xpY2stY3VycmVudCIpLmF0dHIoImFyaWEtaGlkZGVuIiwgInRydWUiKSwgbi4kc2xpZGVzLmVxKGkpLmFkZENsYXNzKCJzbGljay1jdXJyZW50IiksICEwID09PSBuLm9wdGlvbnMuY2VudGVyTW9kZSkgew0KICAgICAgICAgICAgdmFyIHIgPSBuLm9wdGlvbnMuc2xpZGVzVG9TaG93ICUgMiA9PSAwID8gMSA6IDA7DQogICAgICAgICAgICBlID0gTWF0aC5mbG9vcihuLm9wdGlvbnMuc2xpZGVzVG9TaG93IC8gMiksICEwID09PSBuLm9wdGlvbnMuaW5maW5pdGUgJiYgKGkgPj0gZSAmJiBpIDw9IG4uc2xpZGVDb3VudCAtIDEgLSBlID8gbi4kc2xpZGVzLnNsaWNlKGkgLSBlICsgciwgaSArIGUgKyAxKS5hZGRDbGFzcygic2xpY2stYWN0aXZlIikuYXR0cigiYXJpYS1oaWRkZW4iLCAiZmFsc2UiKSA6IChvID0gbi5vcHRpb25zLnNsaWRlc1RvU2hvdyArIGksIHQuc2xpY2UobyAtIGUgKyAxICsgciwgbyArIGUgKyAyKS5hZGRDbGFzcygic2xpY2stYWN0aXZlIikuYXR0cigiYXJpYS1oaWRkZW4iLCAiZmFsc2UiKSksIDAgPT09IGkgPyB0LmVxKHQubGVuZ3RoIC0gMSAtIG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cpLmFkZENsYXNzKCJzbGljay1jZW50ZXIiKSA6IGkgPT09IG4uc2xpZGVDb3VudCAtIDEgJiYgdC5lcShuLm9wdGlvbnMuc2xpZGVzVG9TaG93KS5hZGRDbGFzcygic2xpY2stY2VudGVyIikpLCBuLiRzbGlkZXMuZXEoaSkuYWRkQ2xhc3MoInNsaWNrLWNlbnRlciIpDQogICAgICAgIH0gZWxzZSBpID49IDAgJiYgaSA8PSBuLnNsaWRlQ291bnQgLSBuLm9wdGlvbnMuc2xpZGVzVG9TaG93ID8gbi4kc2xpZGVzLnNsaWNlKGksIGkgKyBuLm9wdGlvbnMuc2xpZGVzVG9TaG93KS5hZGRDbGFzcygic2xpY2stYWN0aXZlIikuYXR0cigiYXJpYS1oaWRkZW4iLCAiZmFsc2UiKSA6IHQubGVuZ3RoIDw9IG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgPyB0LmFkZENsYXNzKCJzbGljay1hY3RpdmUiKS5hdHRyKCJhcmlhLWhpZGRlbiIsICJmYWxzZSIpIDogKHMgPSBuLnNsaWRlQ291bnQgJSBuLm9wdGlvbnMuc2xpZGVzVG9TaG93LCBvID0gITAgPT09IG4ub3B0aW9ucy5pbmZpbml0ZSA/IG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgKyBpIDogaSwgbi5vcHRpb25zLnNsaWRlc1RvU2hvdyA9PSBuLm9wdGlvbnMuc2xpZGVzVG9TY3JvbGwgJiYgbi5zbGlkZUNvdW50IC0gaSA8IG4ub3B0aW9ucy5zbGlkZXNUb1Nob3cgPyB0LnNsaWNlKG8gLSAobi5vcHRpb25zLnNsaWRlc1RvU2hvdyAtIHMpLCBvICsgcykuYWRkQ2xhc3MoInNsaWNrLWFjdGl2ZSIpLmF0dHIoImFyaWEtaGlkZGVuIiwgImZhbHNlIikgOiB0LnNsaWNlKG8sIG8gKyBuLm9wdGlvbnMuc2xpZGVzVG9TaG93KS5hZGRDbGFzcygic2xpY2stYWN0aXZlIikuYXR0cigiYXJpYS1oaWRkZW4iLCAiZmFsc2UiKSk7DQogICAgICAgICJvbmRlbWFuZCIgIT09IG4ub3B0aW9ucy5sYXp5TG9hZCAmJiAiYW50aWNpcGF0ZWQiICE9PSBuLm9wdGlvbnMubGF6eUxvYWQgfHwgbi5sYXp5TG9hZCgpDQogICAgfSwgZS5wcm90b3R5cGUuc2V0dXBJbmZpbml0ZSA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgdmFyIGUsIHQsIG8sIHMgPSB0aGlzOw0KICAgICAgICBpZiAoITAgPT09IHMub3B0aW9ucy5mYWRlICYmIChzLm9wdGlvbnMuY2VudGVyTW9kZSA9ICExKSwgITAgPT09IHMub3B0aW9ucy5pbmZpbml0ZSAmJiAhMSA9PT0gcy5vcHRpb25zLmZhZGUgJiYgKHQgPSBudWxsLCBzLnNsaWRlQ291bnQgPiBzLm9wdGlvbnMuc2xpZGVzVG9TaG93KSkgew0KICAgICAgICAgICAgZm9yIChvID0gITAgPT09IHMub3B0aW9ucy5jZW50ZXJNb2RlID8gcy5vcHRpb25zLnNsaWRlc1RvU2hvdyArIDEgOiBzLm9wdGlvbnMuc2xpZGVzVG9TaG93LCBlID0gcy5zbGlkZUNvdW50OyBlID4gcy5zbGlkZUNvdW50IC0gbzsgZSAtPSAxKSB0ID0gZSAtIDEsIGkocy4kc2xpZGVzW3RdKS5jbG9uZSghMCkuYXR0cigiaWQiLCAiIikuYXR0cigiZGF0YS1zbGljay1pbmRleCIsIHQgLSBzLnNsaWRlQ291bnQpLnByZXBlbmRUbyhzLiRzbGlkZVRyYWNrKS5hZGRDbGFzcygic2xpY2stY2xvbmVkIik7DQogICAgICAgICAgICBmb3IgKGUgPSAwOyBlIDwgbyArIHMuc2xpZGVDb3VudDsgZSArPSAxKSB0ID0gZSwgaShzLiRzbGlkZXNbdF0pLmNsb25lKCEwKS5hdHRyKCJpZCIsICIiKS5hdHRyKCJkYXRhLXNsaWNrLWluZGV4IiwgdCArIHMuc2xpZGVDb3VudCkuYXBwZW5kVG8ocy4kc2xpZGVUcmFjaykuYWRkQ2xhc3MoInNsaWNrLWNsb25lZCIpOw0KICAgICAgICAgICAgcy4kc2xpZGVUcmFjay5maW5kKCIuc2xpY2stY2xvbmVkIikuZmluZCgiW2lkXSIpLmVhY2goZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgICAgIGkodGhpcykuYXR0cigiaWQiLCAiIikNCiAgICAgICAgICAgIH0pDQogICAgICAgIH0NCiAgICB9LCBlLnByb3RvdHlwZS5pbnRlcnJ1cHQgPSBmdW5jdGlvbiAoaSkgew0KICAgICAgICB2YXIgZSA9IHRoaXM7DQogICAgICAgIGkgfHwgZS5hdXRvUGxheSgpLCBlLmludGVycnVwdGVkID0gaQ0KICAgIH0sIGUucHJvdG90eXBlLnNlbGVjdEhhbmRsZXIgPSBmdW5jdGlvbiAoZSkgew0KICAgICAgICB2YXIgdCA9IHRoaXMsDQogICAgICAgICAgICBvID0gaShlLnRhcmdldCkuaXMoIi5zbGljay1zbGlkZSIpID8gaShlLnRhcmdldCkgOiBpKGUudGFyZ2V0KS5wYXJlbnRzKCIuc2xpY2stc2xpZGUiKSwNCiAgICAgICAgICAgIHMgPSBwYXJzZUludChvLmF0dHIoImRhdGEtc2xpY2staW5kZXgiKSk7DQogICAgICAgIHMgfHwgKHMgPSAwKSwgdC5zbGlkZUNvdW50IDw9IHQub3B0aW9ucy5zbGlkZXNUb1Nob3cgPyB0LnNsaWRlSGFuZGxlcihzLCAhMSwgITApIDogdC5zbGlkZUhhbmRsZXIocykNCiAgICB9LCBlLnByb3RvdHlwZS5zbGlkZUhhbmRsZXIgPSBmdW5jdGlvbiAoaSwgZSwgdCkgew0KICAgICAgICB2YXIgbywgcywgbiwgciwgbCwgZCA9IG51bGwsDQogICAgICAgICAgICBhID0gdGhpczsNCiAgICAgICAgaWYgKGUgPSBlIHx8ICExLCAhKCEwID09PSBhLmFuaW1hdGluZyAmJiAhMCA9PT0gYS5vcHRpb25zLndhaXRGb3JBbmltYXRlIHx8ICEwID09PSBhLm9wdGlvbnMuZmFkZSAmJiBhLmN1cnJlbnRTbGlkZSA9PT0gaSkpDQogICAgICAgICAgICBpZiAoITEgPT09IGUgJiYgYS5hc05hdkZvcihpKSwgbyA9IGksIGQgPSBhLmdldExlZnQobyksIHIgPSBhLmdldExlZnQoYS5jdXJyZW50U2xpZGUpLCBhLmN1cnJlbnRMZWZ0ID0gbnVsbCA9PT0gYS5zd2lwZUxlZnQgPyByIDogYS5zd2lwZUxlZnQsICExID09PSBhLm9wdGlvbnMuaW5maW5pdGUgJiYgITEgPT09IGEub3B0aW9ucy5jZW50ZXJNb2RlICYmIChpIDwgMCB8fCBpID4gYS5nZXREb3RDb3VudCgpICogYS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKSkgITEgPT09IGEub3B0aW9ucy5mYWRlICYmIChvID0gYS5jdXJyZW50U2xpZGUsICEwICE9PSB0ID8gYS5hbmltYXRlU2xpZGUociwgZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgICAgIGEucG9zdFNsaWRlKG8pDQogICAgICAgICAgICB9KSA6IGEucG9zdFNsaWRlKG8pKTsNCiAgICAgICAgICAgIGVsc2UgaWYgKCExID09PSBhLm9wdGlvbnMuaW5maW5pdGUgJiYgITAgPT09IGEub3B0aW9ucy5jZW50ZXJNb2RlICYmIChpIDwgMCB8fCBpID4gYS5zbGlkZUNvdW50IC0gYS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKSkgITEgPT09IGEub3B0aW9ucy5mYWRlICYmIChvID0gYS5jdXJyZW50U2xpZGUsICEwICE9PSB0ID8gYS5hbmltYXRlU2xpZGUociwgZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgYS5wb3N0U2xpZGUobykNCiAgICAgICAgfSkgOiBhLnBvc3RTbGlkZShvKSk7DQogICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgaWYgKGEub3B0aW9ucy5hdXRvcGxheSAmJiBjbGVhckludGVydmFsKGEuYXV0b1BsYXlUaW1lciksIHMgPSBvIDwgMCA/IGEuc2xpZGVDb3VudCAlIGEub3B0aW9ucy5zbGlkZXNUb1Njcm9sbCAhPSAwID8gYS5zbGlkZUNvdW50IC0gYS5zbGlkZUNvdW50ICUgYS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsIDogYS5zbGlkZUNvdW50ICsgbyA6IG8gPj0gYS5zbGlkZUNvdW50ID8gYS5zbGlkZUNvdW50ICUgYS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsICE9IDAgPyAwIDogbyAtIGEuc2xpZGVDb3VudCA6IG8sIGEuYW5pbWF0aW5nID0gITAsIGEuJHNsaWRlci50cmlnZ2VyKCJiZWZvcmVDaGFuZ2UiLCBbYSwgYS5jdXJyZW50U2xpZGUsIHNdKSwgbiA9IGEuY3VycmVudFNsaWRlLCBhLmN1cnJlbnRTbGlkZSA9IHMsIGEuc2V0U2xpZGVDbGFzc2VzKGEuY3VycmVudFNsaWRlKSwgYS5vcHRpb25zLmFzTmF2Rm9yICYmIChsID0gKGwgPSBhLmdldE5hdlRhcmdldCgpKS5zbGljaygiZ2V0U2xpY2siKSkuc2xpZGVDb3VudCA8PSBsLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmIGwuc2V0U2xpZGVDbGFzc2VzKGEuY3VycmVudFNsaWRlKSwgYS51cGRhdGVEb3RzKCksIGEudXBkYXRlQXJyb3dzKCksICEwID09PSBhLm9wdGlvbnMuZmFkZSkgcmV0dXJuICEwICE9PSB0ID8gKGEuZmFkZVNsaWRlT3V0KG4pLCBhLmZhZGVTbGlkZShzLCBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgYS5wb3N0U2xpZGUocykNCiAgICAgICAgICAgIH0pKSA6IGEucG9zdFNsaWRlKHMpLCB2b2lkIGEuYW5pbWF0ZUhlaWdodCgpOw0KICAgICAgICAgICAgITAgIT09IHQgPyBhLmFuaW1hdGVTbGlkZShkLCBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgYS5wb3N0U2xpZGUocykNCiAgICAgICAgICAgIH0pIDogYS5wb3N0U2xpZGUocykNCiAgICAgICAgfQ0KICAgIH0sIGUucHJvdG90eXBlLnN0YXJ0TG9hZCA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgdmFyIGkgPSB0aGlzOw0KICAgICAgICAhMCA9PT0gaS5vcHRpb25zLmFycm93cyAmJiBpLnNsaWRlQ291bnQgPiBpLm9wdGlvbnMuc2xpZGVzVG9TaG93ICYmIChpLiRwcmV2QXJyb3cuaGlkZSgpLCBpLiRuZXh0QXJyb3cuaGlkZSgpKSwgITAgPT09IGkub3B0aW9ucy5kb3RzICYmIGkuc2xpZGVDb3VudCA+IGkub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiYgaS4kZG90cy5oaWRlKCksIGkuJHNsaWRlci5hZGRDbGFzcygic2xpY2stbG9hZGluZyIpDQogICAgfSwgZS5wcm90b3R5cGUuc3dpcGVEaXJlY3Rpb24gPSBmdW5jdGlvbiAoKSB7DQogICAgICAgIHZhciBpLCBlLCB0LCBvLCBzID0gdGhpczsNCiAgICAgICAgcmV0dXJuIGkgPSBzLnRvdWNoT2JqZWN0LnN0YXJ0WCAtIHMudG91Y2hPYmplY3QuY3VyWCwgZSA9IHMudG91Y2hPYmplY3Quc3RhcnRZIC0gcy50b3VjaE9iamVjdC5jdXJZLCB0ID0gTWF0aC5hdGFuMihlLCBpKSwgKG8gPSBNYXRoLnJvdW5kKDE4MCAqIHQgLyBNYXRoLlBJKSkgPCAwICYmIChvID0gMzYwIC0gTWF0aC5hYnMobykpLCBvIDw9IDQ1ICYmIG8gPj0gMCA/ICExID09PSBzLm9wdGlvbnMucnRsID8gImxlZnQiIDogInJpZ2h0IiA6IG8gPD0gMzYwICYmIG8gPj0gMzE1ID8gITEgPT09IHMub3B0aW9ucy5ydGwgPyAibGVmdCIgOiAicmlnaHQiIDogbyA+PSAxMzUgJiYgbyA8PSAyMjUgPyAhMSA9PT0gcy5vcHRpb25zLnJ0bCA/ICJyaWdodCIgOiAibGVmdCIgOiAhMCA9PT0gcy5vcHRpb25zLnZlcnRpY2FsU3dpcGluZyA/IG8gPj0gMzUgJiYgbyA8PSAxMzUgPyAiZG93biIgOiAidXAiIDogInZlcnRpY2FsIg0KICAgIH0sIGUucHJvdG90eXBlLnN3aXBlRW5kID0gZnVuY3Rpb24gKGkpIHsNCiAgICAgICAgdmFyIGUsIHQsIG8gPSB0aGlzOw0KICAgICAgICBpZiAoby5kcmFnZ2luZyA9ICExLCBvLnN3aXBpbmcgPSAhMSwgby5zY3JvbGxpbmcpIHJldHVybiBvLnNjcm9sbGluZyA9ICExLCAhMTsNCiAgICAgICAgaWYgKG8uaW50ZXJydXB0ZWQgPSAhMSwgby5zaG91bGRDbGljayA9ICEoby50b3VjaE9iamVjdC5zd2lwZUxlbmd0aCA+IDEwKSwgdm9pZCAwID09PSBvLnRvdWNoT2JqZWN0LmN1clgpIHJldHVybiAhMTsNCiAgICAgICAgaWYgKCEwID09PSBvLnRvdWNoT2JqZWN0LmVkZ2VIaXQgJiYgby4kc2xpZGVyLnRyaWdnZXIoImVkZ2UiLCBbbywgby5zd2lwZURpcmVjdGlvbigpXSksIG8udG91Y2hPYmplY3Quc3dpcGVMZW5ndGggPj0gby50b3VjaE9iamVjdC5taW5Td2lwZSkgew0KICAgICAgICAgICAgc3dpdGNoICh0ID0gby5zd2lwZURpcmVjdGlvbigpKSB7DQogICAgICAgICAgICAgICAgY2FzZSAibGVmdCI6DQogICAgICAgICAgICAgICAgY2FzZSAiZG93biI6DQogICAgICAgICAgICAgICAgICAgIGUgPSBvLm9wdGlvbnMuc3dpcGVUb1NsaWRlID8gby5jaGVja05hdmlnYWJsZShvLmN1cnJlbnRTbGlkZSArIG8uZ2V0U2xpZGVDb3VudCgpKSA6IG8uY3VycmVudFNsaWRlICsgby5nZXRTbGlkZUNvdW50KCksIG8uY3VycmVudERpcmVjdGlvbiA9IDA7DQogICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgIGNhc2UgInJpZ2h0IjoNCiAgICAgICAgICAgICAgICBjYXNlICJ1cCI6DQogICAgICAgICAgICAgICAgICAgIGUgPSBvLm9wdGlvbnMuc3dpcGVUb1NsaWRlID8gby5jaGVja05hdmlnYWJsZShvLmN1cnJlbnRTbGlkZSAtIG8uZ2V0U2xpZGVDb3VudCgpKSA6IG8uY3VycmVudFNsaWRlIC0gby5nZXRTbGlkZUNvdW50KCksIG8uY3VycmVudERpcmVjdGlvbiA9IDENCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgICJ2ZXJ0aWNhbCIgIT0gdCAmJiAoby5zbGlkZUhhbmRsZXIoZSksIG8udG91Y2hPYmplY3QgPSB7fSwgby4kc2xpZGVyLnRyaWdnZXIoInN3aXBlIiwgW28sIHRdKSkNCiAgICAgICAgfSBlbHNlIG8udG91Y2hPYmplY3Quc3RhcnRYICE9PSBvLnRvdWNoT2JqZWN0LmN1clggJiYgKG8uc2xpZGVIYW5kbGVyKG8uY3VycmVudFNsaWRlKSwgby50b3VjaE9iamVjdCA9IHt9KQ0KICAgIH0sIGUucHJvdG90eXBlLnN3aXBlSGFuZGxlciA9IGZ1bmN0aW9uIChpKSB7DQogICAgICAgIHZhciBlID0gdGhpczsNCiAgICAgICAgaWYgKCEoITEgPT09IGUub3B0aW9ucy5zd2lwZSB8fCAib250b3VjaGVuZCIgaW4gZG9jdW1lbnQgJiYgITEgPT09IGUub3B0aW9ucy5zd2lwZSB8fCAhMSA9PT0gZS5vcHRpb25zLmRyYWdnYWJsZSAmJiAtMSAhPT0gaS50eXBlLmluZGV4T2YoIm1vdXNlIikpKSBzd2l0Y2ggKGUudG91Y2hPYmplY3QuZmluZ2VyQ291bnQgPSBpLm9yaWdpbmFsRXZlbnQgJiYgdm9pZCAwICE9PSBpLm9yaWdpbmFsRXZlbnQudG91Y2hlcyA/IGkub3JpZ2luYWxFdmVudC50b3VjaGVzLmxlbmd0aCA6IDEsIGUudG91Y2hPYmplY3QubWluU3dpcGUgPSBlLmxpc3RXaWR0aCAvIGUub3B0aW9ucy50b3VjaFRocmVzaG9sZCwgITAgPT09IGUub3B0aW9ucy52ZXJ0aWNhbFN3aXBpbmcgJiYgKGUudG91Y2hPYmplY3QubWluU3dpcGUgPSBlLmxpc3RIZWlnaHQgLyBlLm9wdGlvbnMudG91Y2hUaHJlc2hvbGQpLCBpLmRhdGEuYWN0aW9uKSB7DQogICAgICAgICAgICBjYXNlICJzdGFydCI6DQogICAgICAgICAgICAgICAgZS5zd2lwZVN0YXJ0KGkpOw0KICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgY2FzZSAibW92ZSI6DQogICAgICAgICAgICAgICAgZS5zd2lwZU1vdmUoaSk7DQogICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICBjYXNlICJlbmQiOg0KICAgICAgICAgICAgICAgIGUuc3dpcGVFbmQoaSkNCiAgICAgICAgfQ0KICAgIH0sIGUucHJvdG90eXBlLnN3aXBlTW92ZSA9IGZ1bmN0aW9uIChpKSB7DQogICAgICAgIHZhciBlLCB0LCBvLCBzLCBuLCByLCBsID0gdGhpczsNCiAgICAgICAgcmV0dXJuIG4gPSB2b2lkIDAgIT09IGkub3JpZ2luYWxFdmVudCA/IGkub3JpZ2luYWxFdmVudC50b3VjaGVzIDogbnVsbCwgISghbC5kcmFnZ2luZyB8fCBsLnNjcm9sbGluZyB8fCBuICYmIDEgIT09IG4ubGVuZ3RoKSAmJiAoZSA9IGwuZ2V0TGVmdChsLmN1cnJlbnRTbGlkZSksIGwudG91Y2hPYmplY3QuY3VyWCA9IHZvaWQgMCAhPT0gbiA/IG5bMF0ucGFnZVggOiBpLmNsaWVudFgsIGwudG91Y2hPYmplY3QuY3VyWSA9IHZvaWQgMCAhPT0gbiA/IG5bMF0ucGFnZVkgOiBpLmNsaWVudFksIGwudG91Y2hPYmplY3Quc3dpcGVMZW5ndGggPSBNYXRoLnJvdW5kKE1hdGguc3FydChNYXRoLnBvdyhsLnRvdWNoT2JqZWN0LmN1clggLSBsLnRvdWNoT2JqZWN0LnN0YXJ0WCwgMikpKSwgciA9IE1hdGgucm91bmQoTWF0aC5zcXJ0KE1hdGgucG93KGwudG91Y2hPYmplY3QuY3VyWSAtIGwudG91Y2hPYmplY3Quc3RhcnRZLCAyKSkpLCAhbC5vcHRpb25zLnZlcnRpY2FsU3dpcGluZyAmJiAhbC5zd2lwaW5nICYmIHIgPiA0ID8gKGwuc2Nyb2xsaW5nID0gITAsICExKSA6ICghMCA9PT0gbC5vcHRpb25zLnZlcnRpY2FsU3dpcGluZyAmJiAobC50b3VjaE9iamVjdC5zd2lwZUxlbmd0aCA9IHIpLCB0ID0gbC5zd2lwZURpcmVjdGlvbigpLCB2b2lkIDAgIT09IGkub3JpZ2luYWxFdmVudCAmJiBsLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoID4gNCAmJiAobC5zd2lwaW5nID0gITAsIGkucHJldmVudERlZmF1bHQoKSksIHMgPSAoITEgPT09IGwub3B0aW9ucy5ydGwgPyAxIDogLTEpICogKGwudG91Y2hPYmplY3QuY3VyWCA+IGwudG91Y2hPYmplY3Quc3RhcnRYID8gMSA6IC0xKSwgITAgPT09IGwub3B0aW9ucy52ZXJ0aWNhbFN3aXBpbmcgJiYgKHMgPSBsLnRvdWNoT2JqZWN0LmN1clkgPiBsLnRvdWNoT2JqZWN0LnN0YXJ0WSA/IDEgOiAtMSksIG8gPSBsLnRvdWNoT2JqZWN0LnN3aXBlTGVuZ3RoLCBsLnRvdWNoT2JqZWN0LmVkZ2VIaXQgPSAhMSwgITEgPT09IGwub3B0aW9ucy5pbmZpbml0ZSAmJiAoMCA9PT0gbC5jdXJyZW50U2xpZGUgJiYgInJpZ2h0IiA9PT0gdCB8fCBsLmN1cnJlbnRTbGlkZSA+PSBsLmdldERvdENvdW50KCkgJiYgImxlZnQiID09PSB0KSAmJiAobyA9IGwudG91Y2hPYmplY3Quc3dpcGVMZW5ndGggKiBsLm9wdGlvbnMuZWRnZUZyaWN0aW9uLCBsLnRvdWNoT2JqZWN0LmVkZ2VIaXQgPSAhMCksICExID09PSBsLm9wdGlvbnMudmVydGljYWwgPyBsLnN3aXBlTGVmdCA9IGUgKyBvICogcyA6IGwuc3dpcGVMZWZ0ID0gZSArIG8gKiAobC4kbGlzdC5oZWlnaHQoKSAvIGwubGlzdFdpZHRoKSAqIHMsICEwID09PSBsLm9wdGlvbnMudmVydGljYWxTd2lwaW5nICYmIChsLnN3aXBlTGVmdCA9IGUgKyBvICogcyksICEwICE9PSBsLm9wdGlvbnMuZmFkZSAmJiAhMSAhPT0gbC5vcHRpb25zLnRvdWNoTW92ZSAmJiAoITAgPT09IGwuYW5pbWF0aW5nID8gKGwuc3dpcGVMZWZ0ID0gbnVsbCwgITEpIDogdm9pZCBsLnNldENTUyhsLnN3aXBlTGVmdCkpKSkNCiAgICB9LCBlLnByb3RvdHlwZS5zd2lwZVN0YXJ0ID0gZnVuY3Rpb24gKGkpIHsNCiAgICAgICAgdmFyIGUsIHQgPSB0aGlzOw0KICAgICAgICBpZiAodC5pbnRlcnJ1cHRlZCA9ICEwLCAxICE9PSB0LnRvdWNoT2JqZWN0LmZpbmdlckNvdW50IHx8IHQuc2xpZGVDb3VudCA8PSB0Lm9wdGlvbnMuc2xpZGVzVG9TaG93KSByZXR1cm4gdC50b3VjaE9iamVjdCA9IHt9LCAhMTsNCiAgICAgICAgdm9pZCAwICE9PSBpLm9yaWdpbmFsRXZlbnQgJiYgdm9pZCAwICE9PSBpLm9yaWdpbmFsRXZlbnQudG91Y2hlcyAmJiAoZSA9IGkub3JpZ2luYWxFdmVudC50b3VjaGVzWzBdKSwgdC50b3VjaE9iamVjdC5zdGFydFggPSB0LnRvdWNoT2JqZWN0LmN1clggPSB2b2lkIDAgIT09IGUgPyBlLnBhZ2VYIDogaS5jbGllbnRYLCB0LnRvdWNoT2JqZWN0LnN0YXJ0WSA9IHQudG91Y2hPYmplY3QuY3VyWSA9IHZvaWQgMCAhPT0gZSA/IGUucGFnZVkgOiBpLmNsaWVudFksIHQuZHJhZ2dpbmcgPSAhMA0KICAgIH0sIGUucHJvdG90eXBlLnVuZmlsdGVyU2xpZGVzID0gZS5wcm90b3R5cGUuc2xpY2tVbmZpbHRlciA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgdmFyIGkgPSB0aGlzOw0KICAgICAgICBudWxsICE9PSBpLiRzbGlkZXNDYWNoZSAmJiAoaS51bmxvYWQoKSwgaS4kc2xpZGVUcmFjay5jaGlsZHJlbih0aGlzLm9wdGlvbnMuc2xpZGUpLmRldGFjaCgpLCBpLiRzbGlkZXNDYWNoZS5hcHBlbmRUbyhpLiRzbGlkZVRyYWNrKSwgaS5yZWluaXQoKSkNCiAgICB9LCBlLnByb3RvdHlwZS51bmxvYWQgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgIHZhciBlID0gdGhpczsNCiAgICAgICAgaSgiLnNsaWNrLWNsb25lZCIsIGUuJHNsaWRlcikucmVtb3ZlKCksIGUuJGRvdHMgJiYgZS4kZG90cy5yZW1vdmUoKSwgZS4kcHJldkFycm93ICYmIGUuaHRtbEV4cHIudGVzdChlLm9wdGlvbnMucHJldkFycm93KSAmJiBlLiRwcmV2QXJyb3cucmVtb3ZlKCksIGUuJG5leHRBcnJvdyAmJiBlLmh0bWxFeHByLnRlc3QoZS5vcHRpb25zLm5leHRBcnJvdykgJiYgZS4kbmV4dEFycm93LnJlbW92ZSgpLCBlLiRzbGlkZXMucmVtb3ZlQ2xhc3MoInNsaWNrLXNsaWRlIHNsaWNrLWFjdGl2ZSBzbGljay12aXNpYmxlIHNsaWNrLWN1cnJlbnQiKS5hdHRyKCJhcmlhLWhpZGRlbiIsICJ0cnVlIikuY3NzKCJ3aWR0aCIsICIiKQ0KICAgIH0sIGUucHJvdG90eXBlLnVuc2xpY2sgPSBmdW5jdGlvbiAoaSkgew0KICAgICAgICB2YXIgZSA9IHRoaXM7DQogICAgICAgIGUuJHNsaWRlci50cmlnZ2VyKCJ1bnNsaWNrIiwgW2UsIGldKSwgZS5kZXN0cm95KCkNCiAgICB9LCBlLnByb3RvdHlwZS51cGRhdGVBcnJvd3MgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgIHZhciBpID0gdGhpczsNCiAgICAgICAgTWF0aC5mbG9vcihpLm9wdGlvbnMuc2xpZGVzVG9TaG93IC8gMiksICEwID09PSBpLm9wdGlvbnMuYXJyb3dzICYmIGkuc2xpZGVDb3VudCA+IGkub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiYgIWkub3B0aW9ucy5pbmZpbml0ZSAmJiAoaS4kcHJldkFycm93LnJlbW92ZUNsYXNzKCJzbGljay1kaXNhYmxlZCIpLmF0dHIoImFyaWEtZGlzYWJsZWQiLCAiZmFsc2UiKSwgaS4kbmV4dEFycm93LnJlbW92ZUNsYXNzKCJzbGljay1kaXNhYmxlZCIpLmF0dHIoImFyaWEtZGlzYWJsZWQiLCAiZmFsc2UiKSwgMCA9PT0gaS5jdXJyZW50U2xpZGUgPyAoaS4kcHJldkFycm93LmFkZENsYXNzKCJzbGljay1kaXNhYmxlZCIpLmF0dHIoImFyaWEtZGlzYWJsZWQiLCAidHJ1ZSIpLCBpLiRuZXh0QXJyb3cucmVtb3ZlQ2xhc3MoInNsaWNrLWRpc2FibGVkIikuYXR0cigiYXJpYS1kaXNhYmxlZCIsICJmYWxzZSIpKSA6IGkuY3VycmVudFNsaWRlID49IGkuc2xpZGVDb3VudCAtIGkub3B0aW9ucy5zbGlkZXNUb1Nob3cgJiYgITEgPT09IGkub3B0aW9ucy5jZW50ZXJNb2RlID8gKGkuJG5leHRBcnJvdy5hZGRDbGFzcygic2xpY2stZGlzYWJsZWQiKS5hdHRyKCJhcmlhLWRpc2FibGVkIiwgInRydWUiKSwgaS4kcHJldkFycm93LnJlbW92ZUNsYXNzKCJzbGljay1kaXNhYmxlZCIpLmF0dHIoImFyaWEtZGlzYWJsZWQiLCAiZmFsc2UiKSkgOiBpLmN1cnJlbnRTbGlkZSA+PSBpLnNsaWRlQ291bnQgLSAxICYmICEwID09PSBpLm9wdGlvbnMuY2VudGVyTW9kZSAmJiAoaS4kbmV4dEFycm93LmFkZENsYXNzKCJzbGljay1kaXNhYmxlZCIpLmF0dHIoImFyaWEtZGlzYWJsZWQiLCAidHJ1ZSIpLCBpLiRwcmV2QXJyb3cucmVtb3ZlQ2xhc3MoInNsaWNrLWRpc2FibGVkIikuYXR0cigiYXJpYS1kaXNhYmxlZCIsICJmYWxzZSIpKSkNCiAgICB9LCBlLnByb3RvdHlwZS51cGRhdGVEb3RzID0gZnVuY3Rpb24gKCkgew0KICAgICAgICB2YXIgaSA9IHRoaXM7DQogICAgICAgIG51bGwgIT09IGkuJGRvdHMgJiYgKGkuJGRvdHMuZmluZCgibGkiKS5yZW1vdmVDbGFzcygic2xpY2stYWN0aXZlIikuZW5kKCksIGkuJGRvdHMuZmluZCgibGkiKS5lcShNYXRoLmZsb29yKGkuY3VycmVudFNsaWRlIC8gaS5vcHRpb25zLnNsaWRlc1RvU2Nyb2xsKSkuYWRkQ2xhc3MoInNsaWNrLWFjdGl2ZSIpKQ0KICAgIH0sIGUucHJvdG90eXBlLnZpc2liaWxpdHkgPSBmdW5jdGlvbiAoKSB7DQogICAgICAgIHZhciBpID0gdGhpczsNCiAgICAgICAgaS5vcHRpb25zLmF1dG9wbGF5ICYmIChkb2N1bWVudFtpLmhpZGRlbl0gPyBpLmludGVycnVwdGVkID0gITAgOiBpLmludGVycnVwdGVkID0gITEpDQogICAgfSwgaS5mbi5zbGljayA9IGZ1bmN0aW9uICgpIHsNCiAgICAgICAgdmFyIGksIHQsIG8gPSB0aGlzLA0KICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1swXSwNCiAgICAgICAgICAgIG4gPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpLA0KICAgICAgICAgICAgciA9IG8ubGVuZ3RoOw0KICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcjsgaSsrKQ0KICAgICAgICAgICAgaWYgKCJvYmplY3QiID09IHR5cGVvZiBzIHx8IHZvaWQgMCA9PT0gcyA/IG9baV0uc2xpY2sgPSBuZXcgZShvW2ldLCBzKSA6IHQgPSBvW2ldLnNsaWNrW3NdLmFwcGx5KG9baV0uc2xpY2ssIG4pLCB2b2lkIDAgIT09IHQpIHJldHVybiB0Ow0KICAgICAgICByZXR1cm4gbw0KICAgIH0NCn0pOw==
- ID: "6954b7c7-2487-423f-8600-436cb3b6dc0e"
  Hint: Size
  Value: 56431
- ID: "6f47a0a5-9c94-4b48-abeb-42d38def6054"
  Hint: Mime Type
  Value: "application/x-javascript"
- ID: "c06867fe-9a43-4c7d-b739-48780492d06f"
  Hint: Extension
  Value: js
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20211222T165806Z
    - ID: "52807595-0f8f-4b20-8d2a-cb71d28c6103"
      Hint: __Owner
      Value: |
        sitecore\jeetendra
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\jeetendra
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "aa628bda-5b0b-4822-a68c-70e077026cc3"
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\jeetendra
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20220203T110645Z
- Language: "fr-FR"
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20211222T165806Z
    - ID: "52807595-0f8f-4b20-8d2a-cb71d28c6103"
      Hint: __Owner
      Value: |
        sitecore\jeetendra
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\jeetendra
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "4da92fb0-4c82-4194-be09-edde79106004"
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\jeetendra
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20211222T165806Z
